         1372024 function calls (1330329 primitive calls) in 0.283 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.283    0.283 case.py:548(_callTestMethod)
        1    0.000    0.000    0.283    0.283 test_cycles.py:40(test_large_cycle)
        1    0.000    0.000    0.283    0.283 testStructures.py:32(create_large_cycle)
        5    0.000    0.000    0.283    0.057 Workbook.py:239(set_cell_contents)
       20    0.000    0.000    0.263    0.013 lark.py:561(open)
       20    0.001    0.000    0.262    0.013 lark.py:267(__init__)
        5    0.002    0.000    0.213    0.043 Workbook.py:154(handle_update_tree)
       15    0.000    0.000    0.211    0.014 Workbook.py:197(evaluate_cell)
       20    0.000    0.000    0.178    0.009 load_grammar.py:1413(load_grammar)
    40/20    0.001    0.000    0.171    0.009 load_grammar.py:1239(load_grammar)
       20    0.001    0.000    0.115    0.006 load_grammar.py:1306(do_import)
       40    0.000    0.000    0.112    0.003 load_grammar.py:964(_parse_grammar)
       60    0.000    0.000    0.095    0.002 parser_frontends.py:100(parse)
       40    0.000    0.000    0.078    0.002 lalr_parser.py:40(parse)
       40    0.000    0.000    0.078    0.002 lalr_parser.py:83(parse)
       40    0.002    0.000    0.077    0.002 lalr_parser.py:91(parse_from_state)
     1120    0.006    0.000    0.062    0.000 visitors.py:282(transform)
       20    0.002    0.000    0.051    0.003 load_grammar.py:690(compile)
40000/38140    0.008    0.000    0.045    0.000 visitors.py:143(_transform_children)
     6780    0.030    0.000    0.043    0.000 lalr_parser_state.py:67(feed_token)
     5055    0.021    0.000    0.040    0.000 tree.py:133(iter_subtrees)
    20400    0.009    0.000    0.037    0.000 visitors.py:111(_call_userfunc)
    15720    0.002    0.000    0.034    0.000 visitors.py:279(_transform_tree)
     6780    0.001    0.000    0.033    0.000 lexer.py:512(lex)
     6780    0.008    0.000    0.031    0.000 lexer.py:590(next_token)
       20    0.000    0.000    0.031    0.002 lark.py:481(_build_parser)
      880    0.001    0.000    0.030    0.000 load_grammar.py:1219(_unpack_definition)
      360    0.000    0.000    0.030    0.000 visitors.py:262(transform)
       20    0.000    0.000    0.029    0.001 parser_frontends.py:246(_construct_parsing_frontend)
       20    0.000    0.000    0.029    0.001 parser_frontends.py:48(__init__)
       20    0.000    0.000    0.029    0.001 parser_frontends.py:201(create_earley_parser)
       20    0.000    0.000    0.029    0.001 parser_frontends.py:188(create_earley_parser__dynamic)
      880    0.001    0.000    0.029    0.000 load_grammar.py:1043(_mangle_definition_tree)
       40    0.003    0.000    0.025    0.001 load_grammar.py:868(resolve_term_references)
12820/540    0.010    0.000    0.024    0.000 copy.py:128(deepcopy)
 3700/540    0.002    0.000    0.023    0.000 tree.py:201(__deepcopy__)
 3700/540    0.002    0.000    0.022    0.000 copy.py:201(_deepcopy_list)
       20    0.000    0.000    0.018    0.001 xearley.py:31(__init__)
       20    0.000    0.000    0.018    0.001 earley.py:32(__init__)
       20    0.000    0.000    0.017    0.001 lark.py:637(parse)
       20    0.000    0.000    0.017    0.001 earley.py:263(parse)
     2160    0.000    0.000    0.017    0.000 tree.py:168(find_data)
    56915    0.013    0.000    0.017    0.000 tree.py:142(<listcomp>)
     2160    0.001    0.000    0.017    0.000 tree.py:164(find_pred)
    10040    0.003    0.000    0.014    0.000 lexer.py:587(match)
       20    0.000    0.000    0.013    0.001 grammar_analysis.py:141(__init__)
       20    0.000    0.000    0.013    0.001 load_grammar.py:710(<listcomp>)
48457/36837    0.008    0.000    0.012    0.000 {built-in method builtins.getattr}
       20    0.000    0.000    0.012    0.001 xearley.py:39(_parse)
       20    0.000    0.000    0.011    0.001 parser_frontends.py:168(__init__)
       80    0.002    0.000    0.011    0.000 earley.py:78(predict_and_complete)
       20    0.005    0.000    0.011    0.001 grammar_analysis.py:78(calculate_sets)
    10040    0.003    0.000    0.010    0.000 lexer.py:387(match)
      540    0.004    0.000    0.010    0.000 visitors.py:297(transform)
      280    0.000    0.000    0.010    0.000 utils.py:132(get_regexp_width)
      280    0.000    0.000    0.009    0.000 sre_parse.py:944(parse)
   218672    0.008    0.000    0.008    0.000 {built-in method builtins.isinstance}
  540/280    0.001    0.000    0.008    0.000 sre_parse.py:436(_parse_sub)
  700/300    0.003    0.000    0.007    0.000 sre_parse.py:494(_parse)
       20    0.000    0.000    0.007    0.000 load_grammar.py:1374(build)
       20    0.000    0.000    0.007    0.000 load_grammar.py:1342(validate)
      360    0.000    0.000    0.007    0.000 load_grammar.py:674(nr_deepcopy_tree)
     1660    0.000    0.000    0.007    0.000 visitors.py:503(_vargs_inline)
    16260    0.004    0.000    0.006    0.000 visitors.py:175(__default__)
    10352    0.006    0.000    0.006    0.000 {method 'match' of 're.Pattern' objects}
      500    0.001    0.000    0.006    0.000 copy.py:259(_reconstruct)
    14240    0.003    0.000    0.006    0.000 grammar.py:18(__eq__)
     1660    0.000    0.000    0.006    0.000 visitors.py:481(__call__)
     7760    0.002    0.000    0.006    0.000 lexer.py:202(__new__)
     1660    0.001    0.000    0.005    0.000 visitors.py:484(__get__)
   154075    0.005    0.000    0.005    0.000 {built-in method builtins.id}
    25020    0.003    0.000    0.005    0.000 grammar.py:124(__eq__)
  395/195    0.000    0.000    0.005    0.000 visitors.py:366(visit)
       20    0.000    0.000    0.005    0.000 earley.py:307(<listcomp>)
       20    0.000    0.000    0.005    0.000 earley_forest.py:388(transform)
       20    0.000    0.000    0.005    0.000 earley_forest.py:526(visit)
       20    0.002    0.000    0.005    0.000 earley_forest.py:274(visit)
      220    0.000    0.000    0.005    0.000 grammar_analysis.py:180(expand_rule)
     8280    0.003    0.000    0.005    0.000 parse_tree_builder.py:145(__call__)
    37520    0.004    0.000    0.004    0.000 tree.py:57(__init__)
     1660    0.001    0.000    0.004    0.000 visitors.py:474(__init__)
      420    0.000    0.000    0.004    0.000 load_grammar.py:601(literal)
    17920    0.003    0.000    0.004    0.000 tree.py:62(meta)
     1020    0.001    0.000    0.004    0.000 utils.py:260(bfs)
      420    0.001    0.000    0.004    0.000 load_grammar.py:566(_literal_to_pattern)
      360    0.000    0.000    0.004    0.000 load_grammar.py:915(_find_used_symbols)
 1315/935    0.000    0.000    0.004    0.000 visitors.py:346(_call_userfunc)
    32040    0.003    0.000    0.004    0.000 grammar.py:25(__hash__)
    10040    0.003    0.000    0.004    0.000 lexer.py:292(feed)
      500    0.000    0.000    0.004    0.000 copy.py:210(_deepcopy_tuple)
     1660    0.002    0.000    0.004    0.000 functools.py:35(update_wrapper)
     7760    0.003    0.000    0.004    0.000 lexer.py:213(_future_new)
       20    0.000    0.000    0.004    0.000 load_grammar.py:694(<listcomp>)
    98861    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}
      500    0.000    0.000    0.003    0.000 copy.py:211(<listcomp>)
       20    0.000    0.000    0.003    0.000 load_grammar.py:693(<listcomp>)
76412/75592    0.003    0.000    0.003    0.000 {built-in method builtins.len}
    10320    0.002    0.000    0.003    0.000 copy.py:243(_keep_alive)
39200/36560    0.002    0.000    0.003    0.000 {built-in method builtins.hash}
     4260    0.001    0.000    0.003    0.000 utils.py:330(add)
     1460    0.001    0.000    0.003    0.000 grammar_analysis.py:187(_expand_rule)
    12165    0.002    0.000    0.003    0.000 lexer.py:265(__eq__)
     4480    0.001    0.000    0.003    0.000 visitors.py:130(_call_userfunc_token)
     2980    0.001    0.000    0.002    0.000 earley_common.py:9(__init__)
      420    0.001    0.000    0.002    0.000 load_grammar.py:540(eval_escaping)
  860/480    0.000    0.000    0.002    0.000 load_grammar.py:389(expansion)
     2280    0.000    0.000    0.002    0.000 earley_common.py:28(__eq__)
     1000    0.001    0.000    0.002    0.000 copy.py:227(_deepcopy_dict)
      360    0.000    0.000    0.002    0.000 load_grammar.py:917(<setcomp>)
       20    0.000    0.000    0.002    0.000 lark.py:467(_prepare_callbacks)
      420    0.001    0.000    0.002    0.000 ast.py:54(literal_eval)
    32720    0.002    0.000    0.002    0.000 grammar.py:121(__hash__)
      180    0.000    0.000    0.002    0.000 visitors.py:159(transform)
4680/1320    0.001    0.000    0.001    0.000 tree.py:185(scan_values)
      100    0.000    0.000    0.001    0.000 load_grammar.py:405(<listcomp>)
  660/180    0.000    0.000    0.001    0.000 visitors.py:155(_transform_tree)
     1320    0.000    0.000    0.001    0.000 load_grammar.py:384(_flatten)
      200    0.000    0.000    0.001    0.000 earley.py:135(<listcomp>)
     6500    0.001    0.000    0.001    0.000 parse_tree_builder.py:20(__call__)
      360    0.000    0.000    0.001    0.000 load_grammar.py:420(expansions)
    26912    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
       20    0.000    0.000    0.001    0.000 parse_tree_builder.py:332(__init__)
     1200    0.000    0.000    0.001    0.000 utils.py:327(__contains__)
      340    0.000    0.000    0.001    0.000 earley_forest.py:428(_visit_node_out_helper)
       60    0.000    0.000    0.001    0.000 xearley.py:41(scan)
      420    0.000    0.000    0.001    0.000 parse_tree_builder.py:340(_init_builders)
    21260    0.001    0.000    0.001    0.000 tree.py:170(<lambda>)
      920    0.000    0.000    0.001    0.000 lexer.py:262(__deepcopy__)
     1680    0.001    0.000    0.001    0.000 tree.py:174(expand_kids_by_data)
      880    0.001    0.000    0.001    0.000 load_grammar.py:1127(_define)
      840    0.001    0.000    0.001    0.000 load_grammar.py:896(<listcomp>)
       40    0.000    0.000    0.001    0.000 utils.py:23(classify)
     3000    0.000    0.000    0.001    0.000 sre_parse.py:255(get)
     9060    0.001    0.000    0.001    0.000 tree.py:28(__init__)
       20    0.000    0.000    0.001    0.000 load_grammar.py:840(__call__)
      420    0.000    0.000    0.001    0.000 ast.py:33(parse)
  880/340    0.001    0.000    0.001    0.000 sre_parse.py:175(getwidth)
     4980    0.001    0.000    0.001    0.000 grammar_analysis.py:70(update_set)
    10040    0.001    0.000    0.001    0.000 lexer.py:581(scanner)
    10100    0.001    0.000    0.001    0.000 {method 'group' of 're.Match' objects}
       20    0.000    0.000    0.001    0.000 pkgutil.py:599(get_data)
      400    0.001    0.000    0.001    0.000 parse_tree_builder.py:162(maybe_create_child_filter)
      180    0.000    0.000    0.001    0.000 earley_forest.py:630(visit_packed_node_out)
     8280    0.001    0.000    0.001    0.000 {built-in method __new__ of type object at 0x1010e6ff8}
     4180    0.001    0.000    0.001    0.000 sre_parse.py:234(__next)
      240    0.000    0.000    0.001    0.000 load_grammar.py:631(expansions)
      160    0.000    0.000    0.001    0.000 earley_forest.py:617(visit_symbol_node_in)
      420    0.001    0.000    0.001    0.000 {built-in method builtins.compile}
      700    0.001    0.000    0.001    0.000 load_grammar.py:908(terminal)
      180    0.000    0.000    0.001    0.000 earley_forest.py:441(visit_packed_node_out)
       20    0.001    0.000    0.001    0.000 {built-in method io.open}
       20    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:1070(get_data)
      420    0.000    0.000    0.001    0.000 load_grammar.py:536(_rfind)
     1860    0.000    0.000    0.001    0.000 grammar_analysis.py:45(__hash__)
      320    0.000    0.000    0.001    0.000 earley_forest.py:84(children)
     8800    0.001    0.000    0.001    0.000 {built-in method builtins.setattr}
  920/840    0.000    0.000    0.001    0.000 tree.py:130(__hash__)
     2840    0.000    0.000    0.001    0.000 sre_parse.py:165(__getitem__)
     1820    0.000    0.000    0.001    0.000 grammar_analysis.py:17(__init__)
      100    0.000    0.000    0.001    0.000 load_grammar.py:450(pattern)
       20    0.000    0.000    0.001    0.000 parse_tree_builder.py:358(create_callback)
      440    0.000    0.000    0.001    0.000 grammar.py:103(__init__)
       20    0.000    0.000    0.001    0.000 load_grammar.py:793(<setcomp>)
     1000    0.000    0.000    0.001    0.000 copy.py:264(<genexpr>)
      590    0.000    0.000    0.000    0.000 {built-in method builtins.max}
      160    0.000    0.000    0.000    0.000 earley_forest.py:413(visit_symbol_node_in)
      140    0.000    0.000    0.000    0.000 earley_forest.py:435(visit_symbol_node_out)
      320    0.000    0.000    0.000    0.000 earley_common.py:25(advance)
       40    0.000    0.000    0.000    0.000 utils.py:254(classify_bool)
      180    0.000    0.000    0.000    0.000 earley_forest.py:594(transform_packed_node)
     1380    0.000    0.000    0.000    0.000 {built-in method fromkeys}
       20    0.000    0.000    0.000    0.000 load_grammar.py:1292(_remove_unused)
       40    0.000    0.000    0.000    0.000 utils.py:256(<listcomp>)
       20    0.000    0.000    0.000    0.000 {built-in method io.open_code}
      320    0.000    0.000    0.000    0.000 earley_forest.py:63(add_family)
      500    0.000    0.000    0.000    0.000 grammar.py:50(renamed)
     2060    0.000    0.000    0.000    0.000 sre_parse.py:250(match)
      632    0.000    0.000    0.000    0.000 re.py:288(_compile)
      280    0.000    0.000    0.000    0.000 earley_forest.py:50(__init__)
      340    0.000    0.000    0.000    0.000 sre_parse.py:356(_escape)
      320    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
     1060    0.000    0.000    0.000    0.000 load_grammar.py:1030(mangle)
      159    0.000    0.000    0.000    0.000 Sheet.py:38(split_cell_ref)
       40    0.000    0.000    0.000    0.000 Workbook.py:390(get_cell_value)
      300    0.000    0.000    0.000    0.000 lexer.py:81(to_regexp)
       68    0.000    0.000    0.000    0.000 Sheet.py:13(get_cell)
      280    0.000    0.000    0.000    0.000 re.py:197(search)
     3000    0.000    0.000    0.000    0.000 {method 'count' of 'str' objects}
       80    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
      400    0.000    0.000    0.000    0.000 load_grammar.py:798(<lambda>)
      120    0.000    0.000    0.000    0.000 utils.py:187(dedup_list)
     1000    0.000    0.000    0.000    0.000 utils.py:324(__init__)
     1040    0.000    0.000    0.000    0.000 load_grammar.py:759(<genexpr>)
       20    0.000    0.000    0.000    0.000 grammar_analysis.py:160(<dictcomp>)
      180    0.000    0.000    0.000    0.000 earley_forest.py:623(visit_packed_node_in)
     5775    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
      140    0.000    0.000    0.000    0.000 earley_forest.py:572(transform_symbol_node)
     1260    0.000    0.000    0.000    0.000 load_grammar.py:537(<genexpr>)
       20    0.000    0.000    0.000    0.000 grammar_analysis.py:175(<dictcomp>)
      260    0.000    0.000    0.000    0.000 load_grammar.py:639(<genexpr>)
     1680    0.000    0.000    0.000    0.000 sre_parse.py:173(append)
       90    0.000    0.000    0.000    0.000 Sheet.py:45(out_of_bounds)
      280    0.000    0.000    0.000    0.000 lexer.py:125(__init__)
       22    0.000    0.000    0.000    0.000 Workbook.py:142(get_cell)
     5160    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      180    0.000    0.000    0.000    0.000 load_grammar.py:1054(_make_rule_tuple)
     1340    0.000    0.000    0.000    0.000 grammar.py:42(__init__)
      280    0.000    0.000    0.000    0.000 re.py:249(compile)
      340    0.000    0.000    0.000    0.000 grammar.py:22(__ne__)
       60    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
      280    0.000    0.000    0.000    0.000 sre_parse.py:225(__init__)
     5095    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
     1220    0.000    0.000    0.000    0.000 sre_parse.py:287(tell)
     1440    0.000    0.000    0.000    0.000 sre_parse.py:161(__len__)
     4480    0.000    0.000    0.000    0.000 visitors.py:182(__default_token__)
     1590    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       20    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
     3004    0.000    0.000    0.000    0.000 {built-in method builtins.next}
      180    0.000    0.000    0.000    0.000 earley_forest.py:418(visit_packed_node_in)
     1100    0.000    0.000    0.000    0.000 utils.py:333(__iter__)
       10    0.000    0.000    0.000    0.000 Workbook.py:420(get_cell_ref_info)
      500    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
     1820    0.000    0.000    0.000    0.000 {method 'rindex' of 'str' objects}
     2240    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
     1340    0.000    0.000    0.000    0.000 load_grammar.py:918(<lambda>)
      200    0.000    0.000    0.000    0.000 load_grammar.py:637(<lambda>)
      159    0.000    0.000    0.000    0.000 Sheet.py:31(str_to_index)
      880    0.000    0.000    0.000    0.000 load_grammar.py:1111(_check_options)
      300    0.000    0.000    0.000    0.000 re.py:269(escape)
     1800    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      320    0.000    0.000    0.000    0.000 earley_forest.py:122(__init__)
     2200    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
     16/5    0.000    0.000    0.000    0.000 Workbook.py:188(calculate_out_degree)
     3540    0.000    0.000    0.000    0.000 earley_common.py:31(__hash__)
      880    0.000    0.000    0.000    0.000 load_grammar.py:1079(__init__)
      980    0.000    0.000    0.000    0.000 sre_parse.py:112(__init__)
      140    0.000    0.000    0.000    0.000 earley_forest.py:556(_call_rule_func)
       40    0.000    0.000    0.000    0.000 {method '__exit__' of '_io._IOBase' objects}
      580    0.000    0.000    0.000    0.000 lexer.py:50(__hash__)
      500    0.000    0.000    0.000    0.000 lexer.py:41(__init__)
       20    0.000    0.000    0.000    0.000 lark.py:188(__init__)
       20    0.000    0.000    0.000    0.000 {method 'read' of '_io.TextIOWrapper' objects}
      720    0.000    0.000    0.000    0.000 {built-in method builtins.any}
       60    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
      340    0.000    0.000    0.000    0.000 load_grammar.py:911(nonterminal)
      500    0.000    0.000    0.000    0.000 copyreg.py:100(__newobj__)
       40    0.000    0.000    0.000    0.000 earley.py:285(<genexpr>)
       60    0.000    0.000    0.000    0.000 sre_parse.py:97(closegroup)
      120    0.000    0.000    0.000    0.000 sre_parse.py:868(_parse_flags)
       20    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
      260    0.000    0.000    0.000    0.000 sre_parse.py:433(_uniq)
      240    0.000    0.000    0.000    0.000 parser_frontends.py:184(match)
       16    0.000    0.000    0.000    0.000 Workbook.py:378(detect_cycle)
     1020    0.000    0.000    0.000    0.000 lark.py:217(__getattr__)
      420    0.000    0.000    0.000    0.000 {built-in method builtins.all}
      288    0.000    0.000    0.000    0.000 abc.py:117(__instancecheck__)
      540    0.000    0.000    0.000    0.000 load_grammar.py:668(value)
     1780    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
      140    0.000    0.000    0.000    0.000 earley_forest.py:547(_collapse_ambig)
       20    0.000    0.000    0.000    0.000 load_grammar.py:443(__init__)
     2500    0.000    0.000    0.000    0.000 copy.py:182(_deepcopy_atomic)
       72    0.000    0.000    0.000    0.000 Workbook.py:137(is_valid_location)
      360    0.000    0.000    0.000    0.000 earley_forest.py:136(sort_key)
       60    0.000    0.000    0.000    0.000 posixpath.py:71(join)
      280    0.000    0.000    0.000    0.000 sre_parse.py:928(fix_flags)
      540    0.000    0.000    0.000    0.000 parse_tree_builder.py:158(_should_expand)
      180    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
      860    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
       20    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
    60/16    0.000    0.000    0.000    0.000 Workbook.py:360(dfs)
       20    0.000    0.000    0.000    0.000 load_grammar.py:1419(sha256_digest)
     1840    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
      500    0.000    0.000    0.000    0.000 lexer.py:70(_get_flags)
     2098    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      200    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
     1820    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       20    0.000    0.000    0.000    0.000 load_grammar.py:806(<setcomp>)
      380    0.000    0.000    0.000    0.000 load_grammar.py:621(expansion)
      260    0.000    0.000    0.000    0.000 sre_parse.py:169(__setitem__)
      420    0.000    0.000    0.000    0.000 ast.py:84(_convert)
     1960    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
       20    0.000    0.000    0.000    0.000 load_grammar.py:446(<dictcomp>)
       40    0.000    0.000    0.000    0.000 load_grammar.py:1285(<dictcomp>)
       20    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
       72    0.000    0.000    0.000    0.000 re.py:187(match)
      860    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
       40    0.000    0.000    0.000    0.000 lexer.py:439(from_text)
     1140    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
       20    0.000    0.000    0.000    0.000 {method 'read' of '_io.BufferedReader' objects}
      280    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
      180    0.000    0.000    0.000    0.000 earley_forest.py:146(children)
      100    0.000    0.000    0.000    0.000 load_grammar.py:346(expr)
      300    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
       20    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
      280    0.000    0.000    0.000    0.000 utils.py:144(<listcomp>)
       20    0.000    0.000    0.000    0.000 parser_frontends.py:127(_get_lexer_callbacks)
      160    0.000    0.000    0.000    0.000 earley_forest.py:69(load_paths)
     1480    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
       60    0.000    0.000    0.000    0.000 sre_parse.py:85(opengroup)
      280    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
       20    0.000    0.000    0.000    0.000 common.py:42(__init__)
      288    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      900    0.000    0.000    0.000    0.000 typing.py:1737(cast)
      320    0.000    0.000    0.000    0.000 utils.py:342(__len__)
      500    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
       20    0.000    0.000    0.000    0.000 load_grammar.py:642(expr)
       20    0.000    0.000    0.000    0.000 earley_forest.py:438(visit_intermediate_node_out)
       20    0.000    0.000    0.000    0.000 earley_forest.py:514(__init__)
       20    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
      540    0.000    0.000    0.000    0.000 load_grammar.py:572(<genexpr>)
      160    0.000    0.000    0.000    0.000 earley_forest.py:490(__init__)
      740    0.000    0.000    0.000    0.000 parse_tree_builder.py:182(<genexpr>)
      280    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}
       65    0.000    0.000    0.000    0.000 DependencyGraph.py:16(outgoing_get)
      220    0.000    0.000    0.000    0.000 grammar.py:69(__init__)
      780    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
       40    0.000    0.000    0.000    0.000 lexer.py:252(new_borrow_pos)
       40    0.000    0.000    0.000    0.000 lexer.py:416(__init__)
       20    0.000    0.000    0.000    0.000 parser_frontends.py:116(_validate_frontend_args)
      540    0.000    0.000    0.000    0.000 load_grammar.py:1232(<genexpr>)
      680    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
      220    0.000    0.000    0.000    0.000 typing.py:306(inner)
        5    0.000    0.000    0.000    0.000 Sheet.py:73(resize)
       60    0.000    0.000    0.000    0.000 lark.py:223(__setattr__)
      544    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       20    0.000    0.000    0.000    0.000 posixpath.py:150(dirname)
       20    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha256}
      200    0.000    0.000    0.000    0.000 lexer.py:88(max_width)
       20    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
       20    0.000    0.000    0.000    0.000 load_grammar.py:1159(_ignore)
      360    0.000    0.000    0.000    0.000 earley_forest.py:132(is_empty)
       40    0.000    0.000    0.000    0.000 lalr_parser_state.py:22(__init__)
       20    0.000    0.000    0.000    0.000 load_grammar.py:1180(_unpack_import)
      573    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      200    0.000    0.000    0.000    0.000 lexer.py:84(min_width)
      280    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
      180    0.000    0.000    0.000    0.000 earley_forest.py:149(<listcomp>)
      420    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
       40    0.000    0.000    0.000    0.000 earley_forest.py:423(visit_token_node)
       10    0.000    0.000    0.000    0.000 visitors.py:419(visit)
      400    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
      140    0.000    0.000    0.000    0.000 earley_forest.py:562(_call_ambig_func)
       60    0.000    0.000    0.000    0.000 earley_forest.py:184(__init__)
       60    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
      320    0.000    0.000    0.000    0.000 load_grammar.py:617(pattern)
      340    0.000    0.000    0.000    0.000 earley_forest.py:539(_check_cycle)
       60    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
      320    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
       20    0.000    0.000    0.000    0.000 codecs.py:319(decode)
       60    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
       10    0.000    0.000    0.000    0.000 visitors.py:425(_visit_tree)
       20    0.000    0.000    0.000    0.000 earley_forest.py:582(transform_intermediate_node)
      420    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      240    0.000    0.000    0.000    0.000 parse_tree_builder.py:17(__init__)
       20    0.000    0.000    0.000    0.000 lark.py:413(<dictcomp>)
      320    0.000    0.000    0.000    0.000 earley_forest.py:160(__hash__)
       20    0.000    0.000    0.000    0.000 earley_forest.py:381(__init__)
      420    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
       20    0.000    0.000    0.000    0.000 load_grammar.py:1303(<dictcomp>)
      120    0.000    0.000    0.000    0.000 sre_parse.py:82(groups)
       40    0.000    0.000    0.000    0.000 load_grammar.py:1094(__init__)
       40    0.000    0.000    0.000    0.000 visitors.py:167(__mul__)
        5    0.000    0.000    0.000    0.000 Sheet.py:51(resize_sheet)
       30    0.000    0.000    0.000    0.000 DependencyGraph.py:24(ingoing_get)
       20    0.000    0.000    0.000    0.000 util.py:73(find_spec)
       40    0.000    0.000    0.000    0.000 contextlib.py:426(__exit__)
      140    0.000    0.000    0.000    0.000 exceptions.py:19(assert_config)
      318    0.000    0.000    0.000    0.000 {method 'isalpha' of 'str' objects}
       20    0.000    0.000    0.000    0.000 common.py:45(<dictcomp>)
       20    0.000    0.000    0.000    0.000 {method 'hexdigest' of '_hashlib.HASH' objects}
       20    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
       20    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
       40    0.000    0.000    0.000    0.000 visitors.py:267(__mul__)
       80    0.000    0.000    0.000    0.000 posixpath.py:41(_get_sep)
       80    0.000    0.000    0.000    0.000 parse_tree_builder.py:187(<listcomp>)
       20    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
       40    0.000    0.000    0.000    0.000 lalr_parser_state.py:40(__init__)
       15    0.000    0.000    0.000    0.000 visitor.py:10(cell)
       40    0.000    0.000    0.000    0.000 lexer.py:279(__init__)
       80    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
       80    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
      180    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
       20    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
      180    0.000    0.000    0.000    0.000 load_grammar.py:1072(<listcomp>)
       20    0.000    0.000    0.000    0.000 earley_forest.py:155(__eq__)
       20    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
       20    0.000    0.000    0.000    0.000 xearley.py:36(<listcomp>)
       40    0.000    0.000    0.000    0.000 load_grammar.py:921(_get_parser)
       60    0.000    0.000    0.000    0.000 utils.py:339(__bool__)
       40    0.000    0.000    0.000    0.000 lexer.py:443(lex)
       80    0.000    0.000    0.000    0.000 parse_tree_builder.py:141(__init__)
       20    0.000    0.000    0.000    0.000 common.py:80(__init__)
       20    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
       80    0.000    0.000    0.000    0.000 visitors.py:259(__init__)
       20    0.000    0.000    0.000    0.000 <string>:1(<lambda>)
       20    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
        1    0.000    0.000    0.000    0.000 Workbook.py:52(new_sheet)
       10    0.000    0.000    0.000    0.000 interpreter.py:149(cell)
       20    0.000    0.000    0.000    0.000 parse_tree_builder.py:83(make_propagate_positions)
       40    0.000    0.000    0.000    0.000 lexer.py:435(__init__)
       20    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
       40    0.000    0.000    0.000    0.000 contextlib.py:420(__init__)
        5    0.000    0.000    0.000    0.000 DependencyGraph.py:58(ingoing_add)
       20    0.000    0.000    0.000    0.000 {method 'issuperset' of 'set' objects}
       60    0.000    0.000    0.000    0.000 earley_forest.py:198(__hash__)
       60    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
       20    0.000    0.000    0.000    0.000 load_grammar.py:1293(rule_dependencies)
       20    0.000    0.000    0.000    0.000 earley_forest.py:223(__init__)
       20    0.000    0.000    0.000    0.000 load_grammar.py:685(__init__)
       80    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
       20    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        2    0.000    0.000    0.000    0.000 contextlib.py:139(__exit__)
       20    0.000    0.000    0.000    0.000 load_grammar.py:1029(_get_mangle)
        5    0.000    0.000    0.000    0.000 Sheet.py:19(to_sheet_coords)
       68    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
       40    0.000    0.000    0.000    0.000 earley_forest.py:409(transform_token_node)
        1    0.000    0.000    0.000    0.000 case.py:551(_callTearDown)
       20    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
        1    0.000    0.000    0.000    0.000 test_cycles.py:21(tearDown)
       15    0.000    0.000    0.000    0.000 visitor.py:6(__init__)
       10    0.000    0.000    0.000    0.000 interpreter.py:9(__init__)
        2    0.000    0.000    0.000    0.000 contextlib.py:279(helper)
       20    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
       20    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
       60    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
       60    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        5    0.000    0.000    0.000    0.000 DependencyGraph.py:35(outgoing_set)
        4    0.000    0.000    0.000    0.000 case.py:54(testPartExecutor)
       40    0.000    0.000    0.000    0.000 contextlib.py:423(__enter__)
       20    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        5    0.000    0.000    0.000    0.000 Cell.py:11(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        2    0.000    0.000    0.000    0.000 contextlib.py:102(__init__)
        1    0.000    0.000    0.000    0.000 Workbook.py:26(__init__)
       40    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
       20    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 case.py:840(assertEqual)
       20    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        1    0.000    0.000    0.000    0.000 Workbook.py:35(list_sheets)
        5    0.000    0.000    0.000    0.000 CellError.py:48(__init__)
        5    0.000    0.000    0.000    0.000 Workbook.py:160(<dictcomp>)
        2    0.000    0.000    0.000    0.000 contextlib.py:130(__enter__)
        1    0.000    0.000    0.000    0.000 typing.py:953(__call__)
        1    0.000    0.000    0.000    0.000 case.py:807(_getAssertEqualityFunc)
        1    0.000    0.000    0.000    0.000 DependencyGraph.py:9(add_sheet)
        5    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        5    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
        1    0.000    0.000    0.000    0.000 Sheet.py:7(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 DependencyGraph.py:5(__init__)
        1    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 case.py:833(_baseAssertEqual)
        1    0.000    0.000    0.000    0.000 Workbook.py:65(<listcomp>)


