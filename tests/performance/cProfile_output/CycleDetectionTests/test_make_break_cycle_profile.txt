         4870512 function calls (4722564 primitive calls) in 1.004 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    1.005    1.005 case.py:548(_callTestMethod)
        1    0.000    0.000    1.005    1.005 test_cycles.py:78(test_make_break_cycle)
       27    0.000    0.000    1.004    0.037 Workbook.py:239(set_cell_contents)
       71    0.000    0.000    0.937    0.013 lark.py:561(open)
       71    0.002    0.000    0.934    0.013 lark.py:267(__init__)
       27    0.002    0.000    0.719    0.027 Workbook.py:154(handle_update_tree)
       58    0.000    0.000    0.715    0.012 Workbook.py:197(evaluate_cell)
       71    0.001    0.000    0.638    0.009 load_grammar.py:1413(load_grammar)
   142/71    0.002    0.000    0.612    0.009 load_grammar.py:1239(load_grammar)
       71    0.002    0.000    0.411    0.006 load_grammar.py:1306(do_import)
      142    0.000    0.000    0.400    0.003 load_grammar.py:964(_parse_grammar)
        1    0.000    0.000    0.361    0.361 testStructures.py:43(create_small_cycles)
      213    0.000    0.000    0.335    0.002 parser_frontends.py:100(parse)
        1    0.000    0.000    0.277    0.277 testStructures.py:32(create_large_cycle)
      142    0.000    0.000    0.273    0.002 lalr_parser.py:40(parse)
      142    0.000    0.000    0.273    0.002 lalr_parser.py:83(parse)
      142    0.006    0.000    0.273    0.002 lalr_parser.py:91(parse_from_state)
     3976    0.020    0.000    0.226    0.000 visitors.py:282(transform)
       71    0.005    0.000    0.181    0.003 load_grammar.py:690(compile)
142000/135397    0.027    0.000    0.166    0.000 visitors.py:143(_transform_children)
    24069    0.102    0.000    0.151    0.000 lalr_parser_state.py:67(feed_token)
    17943    0.074    0.000    0.142    0.000 tree.py:133(iter_subtrees)
    72420    0.031    0.000    0.139    0.000 visitors.py:111(_call_userfunc)
    55806    0.007    0.000    0.127    0.000 visitors.py:279(_transform_tree)
    24069    0.004    0.000    0.116    0.000 lexer.py:512(lex)
    24069    0.029    0.000    0.112    0.000 lexer.py:590(next_token)
       71    0.000    0.000    0.111    0.002 lark.py:481(_build_parser)
     3124    0.003    0.000    0.107    0.000 load_grammar.py:1219(_unpack_definition)
     1278    0.001    0.000    0.105    0.000 visitors.py:262(transform)
       71    0.000    0.000    0.104    0.001 parser_frontends.py:246(_construct_parsing_frontend)
       71    0.000    0.000    0.104    0.001 parser_frontends.py:48(__init__)
       71    0.000    0.000    0.104    0.001 parser_frontends.py:201(create_earley_parser)
       71    0.000    0.000    0.103    0.001 parser_frontends.py:188(create_earley_parser__dynamic)
     3124    0.005    0.000    0.102    0.000 load_grammar.py:1043(_mangle_definition_tree)
      142    0.011    0.000    0.091    0.001 load_grammar.py:868(resolve_term_references)
45511/1917    0.036    0.000    0.085    0.000 copy.py:128(deepcopy)
13135/1917    0.005    0.000    0.082    0.000 tree.py:201(__deepcopy__)
13135/1917    0.007    0.000    0.078    0.000 copy.py:201(_deepcopy_list)
       71    0.000    0.000    0.065    0.001 xearley.py:31(__init__)
       71    0.001    0.000    0.064    0.001 earley.py:32(__init__)
     7668    0.001    0.000    0.062    0.000 tree.py:168(find_data)
       71    0.000    0.000    0.061    0.001 lark.py:637(parse)
       71    0.000    0.000    0.061    0.001 earley.py:263(parse)
   202046    0.046    0.000    0.061    0.000 tree.py:142(<listcomp>)
     7668    0.002    0.000    0.060    0.000 tree.py:164(find_pred)
    35642    0.010    0.000    0.050    0.000 lexer.py:587(match)
       71    0.001    0.000    0.046    0.001 grammar_analysis.py:141(__init__)
172006/130755    0.027    0.000    0.046    0.000 {built-in method builtins.getattr}
       71    0.000    0.000    0.045    0.001 load_grammar.py:710(<listcomp>)
       71    0.000    0.000    0.043    0.001 xearley.py:39(_parse)
       71    0.001    0.000    0.038    0.001 parser_frontends.py:168(__init__)
      282    0.008    0.000    0.038    0.000 earley.py:78(predict_and_complete)
       71    0.017    0.000    0.038    0.001 grammar_analysis.py:78(calculate_sets)
     1917    0.015    0.000    0.037    0.000 visitors.py:297(transform)
    35642    0.011    0.000    0.037    0.000 lexer.py:387(match)
      994    0.001    0.000    0.036    0.000 utils.py:132(get_regexp_width)
      994    0.001    0.000    0.030    0.000 sre_parse.py:944(parse)
   776144    0.029    0.000    0.030    0.000 {built-in method builtins.isinstance}
 1917/994    0.003    0.000    0.028    0.000 sre_parse.py:436(_parse_sub)
2485/1065    0.011    0.000    0.026    0.000 sre_parse.py:494(_parse)
       71    0.000    0.000    0.025    0.000 load_grammar.py:1374(build)
       71    0.002    0.000    0.024    0.000 load_grammar.py:1342(validate)
    57723    0.017    0.000    0.024    0.000 visitors.py:175(__default__)
     1278    0.001    0.000    0.024    0.000 load_grammar.py:674(nr_deepcopy_tree)
    36762    0.023    0.000    0.023    0.000 {method 'match' of 're.Pattern' objects}
     5893    0.001    0.000    0.023    0.000 visitors.py:503(_vargs_inline)
    50500    0.012    0.000    0.022    0.000 grammar.py:18(__eq__)
     1775    0.004    0.000    0.022    0.000 copy.py:259(_reconstruct)
     5893    0.003    0.000    0.022    0.000 visitors.py:484(__get__)
     5893    0.002    0.000    0.022    0.000 visitors.py:481(__call__)
    27546    0.007    0.000    0.019    0.000 lexer.py:202(__new__)
   546926    0.019    0.000    0.019    0.000 {built-in method builtins.id}
     5893    0.002    0.000    0.018    0.000 visitors.py:474(__init__)
    88821    0.010    0.000    0.018    0.000 grammar.py:124(__eq__)
 1400/690    0.001    0.000    0.018    0.000 visitors.py:366(visit)
    63616    0.014    0.000    0.017    0.000 tree.py:62(meta)
      781    0.001    0.000    0.017    0.000 grammar_analysis.py:180(expand_rule)
       71    0.000    0.000    0.017    0.000 earley.py:307(<listcomp>)
       71    0.000    0.000    0.017    0.000 earley_forest.py:388(transform)
       71    0.000    0.000    0.017    0.000 earley_forest.py:526(visit)
    29394    0.012    0.000    0.016    0.000 parse_tree_builder.py:145(__call__)
       71    0.006    0.000    0.016    0.000 earley_forest.py:274(visit)
   133196    0.016    0.000    0.016    0.000 tree.py:57(__init__)
     5893    0.010    0.000    0.016    0.000 functools.py:35(update_wrapper)
     3621    0.003    0.000    0.015    0.000 utils.py:260(bfs)
     1491    0.001    0.000    0.015    0.000 load_grammar.py:601(literal)
     1278    0.000    0.000    0.014    0.000 load_grammar.py:915(_find_used_symbols)
4666/3317    0.002    0.000    0.014    0.000 visitors.py:346(_call_userfunc)
    35642    0.011    0.000    0.014    0.000 lexer.py:292(feed)
   113724    0.010    0.000    0.014    0.000 grammar.py:25(__hash__)
     1491    0.003    0.000    0.014    0.000 load_grammar.py:566(_literal_to_pattern)
     1775    0.001    0.000    0.013    0.000 copy.py:210(_deepcopy_tuple)
       71    0.000    0.000    0.013    0.000 load_grammar.py:694(<listcomp>)
    27546    0.010    0.000    0.013    0.000 lexer.py:213(_future_new)
   350945    0.012    0.000    0.012    0.000 {method 'append' of 'list' objects}
     1775    0.001    0.000    0.012    0.000 copy.py:211(<listcomp>)
       71    0.000    0.000    0.011    0.000 load_grammar.py:693(<listcomp>)
     5183    0.004    0.000    0.011    0.000 grammar_analysis.py:187(_expand_rule)
271445/268534    0.011    0.000    0.011    0.000 {built-in method builtins.len}
    36636    0.008    0.000    0.011    0.000 copy.py:243(_keep_alive)
    15111    0.003    0.000    0.011    0.000 utils.py:330(add)
139128/129760    0.008    0.000    0.010    0.000 {built-in method builtins.hash}
    43110    0.008    0.000    0.010    0.000 lexer.py:265(__eq__)
    15904    0.005    0.000    0.009    0.000 visitors.py:130(_call_userfunc_token)
    10573    0.005    0.000    0.008    0.000 earley_common.py:9(__init__)
3053/1704    0.002    0.000    0.008    0.000 load_grammar.py:389(expansion)
     8094    0.002    0.000    0.008    0.000 earley_common.py:28(__eq__)
     1491    0.002    0.000    0.008    0.000 load_grammar.py:540(eval_escaping)
     3550    0.002    0.000    0.007    0.000 copy.py:227(_deepcopy_dict)
     1278    0.002    0.000    0.007    0.000 load_grammar.py:917(<setcomp>)
       71    0.000    0.000    0.007    0.000 lark.py:467(_prepare_callbacks)
   116142    0.006    0.000    0.006    0.000 grammar.py:121(__hash__)
      639    0.000    0.000    0.005    0.000 visitors.py:159(transform)
     1491    0.002    0.000    0.005    0.000 ast.py:54(literal_eval)
16614/4686    0.004    0.000    0.005    0.000 tree.py:185(scan_values)
      355    0.000    0.000    0.005    0.000 load_grammar.py:405(<listcomp>)
     4686    0.001    0.000    0.005    0.000 load_grammar.py:384(_flatten)
 2343/639    0.001    0.000    0.005    0.000 visitors.py:155(_transform_tree)
    23073    0.004    0.000    0.005    0.000 parse_tree_builder.py:20(__call__)
      706    0.001    0.000    0.004    0.000 earley.py:135(<listcomp>)
     1278    0.001    0.000    0.004    0.000 load_grammar.py:420(expansions)
    95549    0.004    0.000    0.004    0.000 {method 'get' of 'dict' objects}
       71    0.000    0.000    0.004    0.000 parse_tree_builder.py:332(__init__)
      211    0.001    0.000    0.004    0.000 xearley.py:41(scan)
     4258    0.001    0.000    0.004    0.000 utils.py:327(__contains__)
     1203    0.001    0.000    0.004    0.000 earley_forest.py:428(_visit_node_out_helper)
     1491    0.001    0.000    0.004    0.000 parse_tree_builder.py:340(_init_builders)
    75473    0.004    0.000    0.004    0.000 tree.py:170(<lambda>)
     5964    0.003    0.000    0.004    0.000 tree.py:174(expand_kids_by_data)
     3266    0.001    0.000    0.004    0.000 lexer.py:262(__deepcopy__)
     3124    0.002    0.000    0.004    0.000 load_grammar.py:1127(_define)
     2982    0.002    0.000    0.004    0.000 load_grammar.py:896(<listcomp>)
    10650    0.002    0.000    0.004    0.000 sre_parse.py:255(get)
    32163    0.003    0.000    0.003    0.000 tree.py:28(__init__)
      142    0.001    0.000    0.003    0.000 utils.py:23(classify)
3124/1207    0.003    0.000    0.003    0.000 sre_parse.py:175(getwidth)
     1491    0.001    0.000    0.003    0.000 ast.py:33(parse)
    17679    0.003    0.000    0.003    0.000 grammar_analysis.py:70(update_set)
       71    0.000    0.000    0.003    0.000 load_grammar.py:840(__call__)
    35642    0.003    0.000    0.003    0.000 lexer.py:581(scanner)
     1420    0.002    0.000    0.003    0.000 parse_tree_builder.py:162(maybe_create_child_filter)
     2485    0.002    0.000    0.003    0.000 load_grammar.py:908(terminal)
    29392    0.003    0.000    0.003    0.000 {built-in method __new__ of type object at 0x1010e6ff8}
      637    0.000    0.000    0.003    0.000 earley_forest.py:630(visit_packed_node_out)
    14839    0.003    0.000    0.003    0.000 sre_parse.py:234(__next)
    35853    0.003    0.000    0.003    0.000 {method 'group' of 're.Match' objects}
      566    0.000    0.000    0.003    0.000 earley_forest.py:617(visit_symbol_node_in)
       71    0.000    0.000    0.003    0.000 pkgutil.py:599(get_data)
      852    0.000    0.000    0.003    0.000 load_grammar.py:631(expansions)
     1491    0.003    0.000    0.003    0.000 {built-in method builtins.compile}
      637    0.000    0.000    0.002    0.000 earley_forest.py:441(visit_packed_node_out)
       71    0.002    0.000    0.002    0.000 {built-in method io.open}
     1491    0.000    0.000    0.002    0.000 load_grammar.py:536(_rfind)
     6603    0.001    0.000    0.002    0.000 grammar_analysis.py:45(__hash__)
     1132    0.000    0.000    0.002    0.000 earley_forest.py:84(children)
    31240    0.002    0.000    0.002    0.000 {built-in method builtins.setattr}
       71    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:1070(get_data)
3266/2982    0.001    0.000    0.002    0.000 tree.py:130(__hash__)
     6461    0.002    0.000    0.002    0.000 grammar_analysis.py:17(__init__)
    10082    0.001    0.000    0.002    0.000 sre_parse.py:165(__getitem__)
      355    0.001    0.000    0.002    0.000 load_grammar.py:450(pattern)
       71    0.001    0.000    0.002    0.000 parse_tree_builder.py:358(create_callback)
     3550    0.000    0.000    0.002    0.000 copy.py:264(<genexpr>)
     1562    0.001    0.000    0.002    0.000 grammar.py:103(__init__)
      566    0.000    0.000    0.002    0.000 earley_forest.py:413(visit_symbol_node_in)
     2113    0.001    0.000    0.002    0.000 {built-in method builtins.max}
       71    0.001    0.000    0.002    0.000 load_grammar.py:793(<setcomp>)
      495    0.000    0.000    0.002    0.000 earley_forest.py:435(visit_symbol_node_out)
       71    0.001    0.000    0.002    0.000 load_grammar.py:1292(_remove_unused)
     1130    0.000    0.000    0.002    0.000 earley_common.py:25(advance)
      637    0.001    0.000    0.002    0.000 earley_forest.py:594(transform_packed_node)
      142    0.000    0.000    0.002    0.000 utils.py:254(classify_bool)
     1775    0.001    0.000    0.002    0.000 grammar.py:50(renamed)
     4881    0.001    0.000    0.002    0.000 {built-in method fromkeys}
      142    0.000    0.000    0.002    0.000 utils.py:256(<listcomp>)
     7313    0.001    0.000    0.002    0.000 sre_parse.py:250(match)
     1130    0.000    0.000    0.001    0.000 earley_forest.py:63(add_family)
     1207    0.001    0.000    0.001    0.000 sre_parse.py:356(_escape)
     1132    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
       71    0.001    0.000    0.001    0.000 {built-in method io.open_code}
      988    0.001    0.000    0.001    0.000 earley_forest.py:50(__init__)
     3763    0.001    0.000    0.001    0.000 load_grammar.py:1030(mangle)
     2258    0.001    0.000    0.001    0.000 re.py:288(_compile)
      612    0.001    0.000    0.001    0.000 Sheet.py:38(split_cell_ref)
      257    0.000    0.000    0.001    0.000 Sheet.py:13(get_cell)
      146    0.000    0.000    0.001    0.000 Workbook.py:390(get_cell_value)
     1065    0.000    0.000    0.001    0.000 lexer.py:81(to_regexp)
      994    0.000    0.000    0.001    0.000 re.py:197(search)
    10650    0.001    0.000    0.001    0.000 {method 'count' of 'str' objects}
      284    0.000    0.000    0.001    0.000 {method 'join' of 'str' objects}
     3532    0.001    0.000    0.001    0.000 utils.py:324(__init__)
    20502    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
     3692    0.001    0.000    0.001    0.000 load_grammar.py:759(<genexpr>)
     1420    0.000    0.000    0.001    0.000 load_grammar.py:798(<lambda>)
      426    0.000    0.000    0.001    0.000 utils.py:187(dedup_list)
      637    0.000    0.000    0.001    0.000 earley_forest.py:623(visit_packed_node_in)
       71    0.000    0.000    0.001    0.000 grammar_analysis.py:160(<dictcomp>)
      495    0.000    0.000    0.001    0.000 earley_forest.py:572(transform_symbol_node)
     4473    0.001    0.000    0.001    0.000 load_grammar.py:537(<genexpr>)
     5964    0.001    0.000    0.001    0.000 sre_parse.py:173(append)
      923    0.000    0.000    0.001    0.000 load_grammar.py:639(<genexpr>)
       71    0.000    0.000    0.001    0.000 grammar_analysis.py:175(<dictcomp>)
      994    0.000    0.000    0.001    0.000 lexer.py:125(__init__)
      335    0.000    0.000    0.001    0.000 Sheet.py:45(out_of_bounds)
    18318    0.001    0.000    0.001    0.000 {built-in method builtins.issubclass}
     4757    0.001    0.000    0.001    0.000 grammar.py:42(__init__)
     1207    0.000    0.000    0.001    0.000 grammar.py:22(__ne__)
      639    0.001    0.000    0.001    0.000 load_grammar.py:1054(_make_rule_tuple)
     4331    0.001    0.000    0.001    0.000 sre_parse.py:287(tell)
      213    0.000    0.000    0.001    0.000 {method 'sort' of 'list' objects}
    15904    0.001    0.000    0.001    0.000 visitors.py:182(__default_token__)
    10622    0.001    0.000    0.001    0.000 {built-in method builtins.next}
     5579    0.001    0.000    0.001    0.000 {method 'add' of 'set' objects}
       71    0.000    0.000    0.001    0.000 grammar_analysis.py:82(<setcomp>)
      994    0.000    0.000    0.001    0.000 sre_parse.py:225(__init__)
     5112    0.001    0.000    0.001    0.000 sre_parse.py:161(__len__)
    18085    0.001    0.000    0.001    0.000 {method 'values' of 'dict' objects}
       78    0.000    0.000    0.001    0.000 Workbook.py:142(get_cell)
      637    0.000    0.000    0.001    0.000 earley_forest.py:418(visit_packed_node_in)
     3889    0.001    0.000    0.001    0.000 utils.py:333(__iter__)
     7973    0.001    0.000    0.001    0.000 {method 'startswith' of 'str' objects}
      994    0.000    0.000    0.001    0.000 re.py:249(compile)
     1775    0.001    0.000    0.001    0.000 {method '__reduce_ex__' of 'object' objects}
     6461    0.001    0.000    0.001    0.000 {method 'rindex' of 'str' objects}
     4757    0.001    0.000    0.001    0.000 load_grammar.py:918(<lambda>)
       71    0.001    0.000    0.001    0.000 {method 'read' of '_io.TextIOWrapper' objects}
     3124    0.001    0.000    0.001    0.000 load_grammar.py:1111(_check_options)
     7810    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}
     1065    0.000    0.000    0.001    0.000 re.py:269(escape)
      710    0.000    0.000    0.001    0.000 load_grammar.py:637(<lambda>)
      612    0.001    0.000    0.001    0.000 Sheet.py:31(str_to_index)
    12559    0.001    0.000    0.001    0.000 earley_common.py:31(__hash__)
     3124    0.001    0.000    0.001    0.000 load_grammar.py:1079(__init__)
     6390    0.001    0.000    0.001    0.000 {built-in method builtins.min}
      142    0.001    0.000    0.001    0.000 {method '__exit__' of '_io._IOBase' objects}
       31    0.000    0.000    0.001    0.000 Workbook.py:420(get_cell_ref_info)
     3479    0.001    0.000    0.001    0.000 sre_parse.py:112(__init__)
     2059    0.000    0.000    0.001    0.000 lexer.py:50(__hash__)
     1130    0.000    0.000    0.001    0.000 earley_forest.py:122(__init__)
     2556    0.000    0.000    0.001    0.000 {built-in method builtins.any}
     1775    0.001    0.000    0.001    0.000 lexer.py:41(__init__)
      495    0.000    0.000    0.001    0.000 earley_forest.py:556(_call_rule_func)
      213    0.000    0.000    0.001    0.000 parser_frontends.py:96(_make_lexer_thread)
       71    0.000    0.000    0.001    0.000 lark.py:188(__init__)
    66/27    0.000    0.000    0.001    0.000 Workbook.py:188(calculate_out_degree)
      213    0.000    0.000    0.001    0.000 sre_parse.py:97(closegroup)
      426    0.000    0.000    0.001    0.000 sre_parse.py:868(_parse_flags)
     6319    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
       71    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
      850    0.000    0.000    0.000    0.000 parser_frontends.py:184(match)
     1775    0.000    0.000    0.000    0.000 copyreg.py:100(__newobj__)
     3621    0.000    0.000    0.000    0.000 lark.py:217(__getattr__)
      142    0.000    0.000    0.000    0.000 earley.py:285(<genexpr>)
     1491    0.000    0.000    0.000    0.000 {built-in method builtins.all}
     1917    0.000    0.000    0.000    0.000 load_grammar.py:668(value)
       71    0.000    0.000    0.000    0.000 load_grammar.py:443(__init__)
     1036    0.000    0.000    0.000    0.000 abc.py:117(__instancecheck__)
      495    0.000    0.000    0.000    0.000 earley_forest.py:547(_collapse_ambig)
     1207    0.000    0.000    0.000    0.000 load_grammar.py:911(nonterminal)
     8875    0.000    0.000    0.000    0.000 copy.py:182(_deepcopy_atomic)
      270    0.000    0.000    0.000    0.000 Workbook.py:137(is_valid_location)
      923    0.000    0.000    0.000    0.000 sre_parse.py:433(_uniq)
      213    0.000    0.000    0.000    0.000 posixpath.py:71(join)
      639    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
     1917    0.000    0.000    0.000    0.000 parse_tree_builder.py:158(_should_expand)
     1274    0.000    0.000    0.000    0.000 earley_forest.py:136(sort_key)
     3053    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
       66    0.000    0.000    0.000    0.000 Workbook.py:378(detect_cycle)
     6512    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       71    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
       71    0.000    0.000    0.000    0.000 load_grammar.py:1419(sha256_digest)
     7543    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
     6461    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
      923    0.000    0.000    0.000    0.000 sre_parse.py:169(__setitem__)
       71    0.000    0.000    0.000    0.000 load_grammar.py:806(<setcomp>)
     6944    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
     1775    0.000    0.000    0.000    0.000 lexer.py:70(_get_flags)
       71    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
       71    0.000    0.000    0.000    0.000 {method 'read' of '_io.BufferedReader' objects}
      710    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
      994    0.000    0.000    0.000    0.000 sre_parse.py:928(fix_flags)
      988    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
       71    0.000    0.000    0.000    0.000 load_grammar.py:446(<dictcomp>)
     1349    0.000    0.000    0.000    0.000 load_grammar.py:621(expansion)
      142    0.000    0.000    0.000    0.000 lexer.py:439(from_text)
     4047    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
      270    0.000    0.000    0.000    0.000 re.py:187(match)
      142    0.000    0.000    0.000    0.000 load_grammar.py:1285(<dictcomp>)
     3053    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
      637    0.000    0.000    0.000    0.000 earley_forest.py:146(children)
     1065    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
   157/66    0.000    0.000    0.000    0.000 Workbook.py:360(dfs)
     1491    0.000    0.000    0.000    0.000 ast.py:84(_convert)
      355    0.000    0.000    0.000    0.000 load_grammar.py:346(expr)
     5238    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
      566    0.000    0.000    0.000    0.000 earley_forest.py:69(load_paths)
       71    0.000    0.000    0.000    0.000 parser_frontends.py:127(_get_lexer_callbacks)
      994    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
       71    0.000    0.000    0.000    0.000 load_grammar.py:642(expr)
      994    0.000    0.000    0.000    0.000 utils.py:144(<listcomp>)
       71    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
     1036    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
     3195    0.000    0.000    0.000    0.000 typing.py:1737(cast)
       71    0.000    0.000    0.000    0.000 common.py:42(__init__)
     1775    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
      213    0.000    0.000    0.000    0.000 sre_parse.py:85(opengroup)
       71    0.000    0.000    0.000    0.000 earley_forest.py:514(__init__)
     1132    0.000    0.000    0.000    0.000 utils.py:342(__len__)
     2627    0.000    0.000    0.000    0.000 parse_tree_builder.py:182(<genexpr>)
      566    0.000    0.000    0.000    0.000 earley_forest.py:490(__init__)
       71    0.000    0.000    0.000    0.000 earley_forest.py:438(visit_intermediate_node_out)
      781    0.000    0.000    0.000    0.000 grammar.py:69(__init__)
     2412    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       27    0.000    0.000    0.000    0.000 Sheet.py:73(resize)
      994    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}
      142    0.000    0.000    0.000    0.000 lexer.py:416(__init__)
      142    0.000    0.000    0.000    0.000 lexer.py:252(new_borrow_pos)
     1917    0.000    0.000    0.000    0.000 load_grammar.py:572(<genexpr>)
     1917    0.000    0.000    0.000    0.000 load_grammar.py:1232(<genexpr>)
       71    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
      781    0.000    0.000    0.000    0.000 typing.py:306(inner)
      213    0.000    0.000    0.000    0.000 lark.py:223(__setattr__)
      184    0.000    0.000    0.000    0.000 DependencyGraph.py:16(outgoing_get)
       71    0.000    0.000    0.000    0.000 codecs.py:319(decode)
     2769    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
     1860    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       71    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha256}
       71    0.000    0.000    0.000    0.000 parser_frontends.py:116(_validate_frontend_args)
       71    0.000    0.000    0.000    0.000 posixpath.py:150(dirname)
      710    0.000    0.000    0.000    0.000 lexer.py:88(max_width)
      142    0.000    0.000    0.000    0.000 lalr_parser_state.py:22(__init__)
       71    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
       71    0.000    0.000    0.000    0.000 load_grammar.py:1159(_ignore)
      637    0.000    0.000    0.000    0.000 earley_forest.py:149(<listcomp>)
     1491    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
     2070    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
       71    0.000    0.000    0.000    0.000 load_grammar.py:1180(_unpack_import)
      495    0.000    0.000    0.000    0.000 earley_forest.py:562(_call_ambig_func)
     1274    0.000    0.000    0.000    0.000 earley_forest.py:132(is_empty)
      710    0.000    0.000    0.000    0.000 lexer.py:84(min_width)
      211    0.000    0.000    0.000    0.000 earley_forest.py:184(__init__)
     1420    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
      213    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
      142    0.000    0.000    0.000    0.000 earley_forest.py:423(visit_token_node)
       31    0.000    0.000    0.000    0.000 visitors.py:419(visit)
      994    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
     1136    0.000    0.000    0.000    0.000 load_grammar.py:617(pattern)
     1203    0.000    0.000    0.000    0.000 earley_forest.py:539(_check_cycle)
      142    0.000    0.000    0.000    0.000 visitors.py:167(__mul__)
     1136    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
     1491    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
       31    0.000    0.000    0.000    0.000 visitors.py:425(_visit_tree)
     1491    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
       71    0.000    0.000    0.000    0.000 earley_forest.py:381(__init__)
      213    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
      852    0.000    0.000    0.000    0.000 parse_tree_builder.py:17(__init__)
       71    0.000    0.000    0.000    0.000 load_grammar.py:1303(<dictcomp>)
       71    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
       71    0.000    0.000    0.000    0.000 earley_forest.py:582(transform_intermediate_node)
       27    0.000    0.000    0.000    0.000 Sheet.py:51(resize_sheet)
      213    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
       71    0.000    0.000    0.000    0.000 lark.py:413(<dictcomp>)
      284    0.000    0.000    0.000    0.000 parse_tree_builder.py:187(<listcomp>)
      142    0.000    0.000    0.000    0.000 load_grammar.py:1094(__init__)
       71    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
      116    0.000    0.000    0.000    0.000 DependencyGraph.py:24(ingoing_get)
     1130    0.000    0.000    0.000    0.000 earley_forest.py:160(__hash__)
       71    0.000    0.000    0.000    0.000 util.py:73(find_spec)
      142    0.000    0.000    0.000    0.000 visitors.py:267(__mul__)
      497    0.000    0.000    0.000    0.000 exceptions.py:19(assert_config)
      426    0.000    0.000    0.000    0.000 sre_parse.py:82(groups)
     1224    0.000    0.000    0.000    0.000 {method 'isalpha' of 'str' objects}
      142    0.000    0.000    0.000    0.000 contextlib.py:426(__exit__)
       71    0.000    0.000    0.000    0.000 common.py:45(<dictcomp>)
       71    0.000    0.000    0.000    0.000 {method 'hexdigest' of '_hashlib.HASH' objects}
      284    0.000    0.000    0.000    0.000 posixpath.py:41(_get_sep)
       71    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
       49    0.000    0.000    0.000    0.000 visitor.py:10(cell)
      284    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
      142    0.000    0.000    0.000    0.000 lexer.py:279(__init__)
       71    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
      142    0.000    0.000    0.000    0.000 lalr_parser_state.py:40(__init__)
       71    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
      639    0.000    0.000    0.000    0.000 load_grammar.py:1072(<listcomp>)
       71    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
      284    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
      639    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
      142    0.000    0.000    0.000    0.000 lexer.py:443(lex)
      211    0.000    0.000    0.000    0.000 utils.py:339(__bool__)
       71    0.000    0.000    0.000    0.000 xearley.py:36(<listcomp>)
       71    0.000    0.000    0.000    0.000 common.py:80(__init__)
      142    0.000    0.000    0.000    0.000 load_grammar.py:921(_get_parser)
       71    0.000    0.000    0.000    0.000 earley_forest.py:155(__eq__)
      284    0.000    0.000    0.000    0.000 visitors.py:259(__init__)
      284    0.000    0.000    0.000    0.000 parse_tree_builder.py:141(__init__)
       71    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
       71    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
       71    0.000    0.000    0.000    0.000 <string>:1(<lambda>)
       71    0.000    0.000    0.000    0.000 parse_tree_builder.py:83(make_propagate_positions)
      142    0.000    0.000    0.000    0.000 lexer.py:435(__init__)
       19    0.000    0.000    0.000    0.000 DependencyGraph.py:58(ingoing_add)
      213    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        3    0.000    0.000    0.000    0.000 Workbook.py:52(new_sheet)
       30    0.000    0.000    0.000    0.000 interpreter.py:149(cell)
       71    0.000    0.000    0.000    0.000 load_grammar.py:685(__init__)
       71    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
       71    0.000    0.000    0.000    0.000 {method 'issuperset' of 'set' objects}
       71    0.000    0.000    0.000    0.000 earley_forest.py:223(__init__)
      142    0.000    0.000    0.000    0.000 contextlib.py:420(__init__)
       71    0.000    0.000    0.000    0.000 load_grammar.py:1293(rule_dependencies)
      284    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
       15    0.000    0.000    0.000    0.000 case.py:840(assertEqual)
      211    0.000    0.000    0.000    0.000 earley_forest.py:198(__hash__)
      254    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
       51    0.000    0.000    0.000    0.000 visitor.py:6(__init__)
       71    0.000    0.000    0.000    0.000 load_grammar.py:1029(_get_mangle)
       71    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        7    0.000    0.000    0.000    0.000 Cell.py:17(is_number)
       27    0.000    0.000    0.000    0.000 DependencyGraph.py:35(outgoing_set)
       18    0.000    0.000    0.000    0.000 Sheet.py:19(to_sheet_coords)
       71    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        3    0.000    0.000    0.000    0.000 Workbook.py:26(__init__)
       31    0.000    0.000    0.000    0.000 interpreter.py:9(__init__)
      213    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      142    0.000    0.000    0.000    0.000 contextlib.py:423(__enter__)
      211    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
       71    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       71    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
       15    0.000    0.000    0.000    0.000 case.py:807(_getAssertEqualityFunc)
      142    0.000    0.000    0.000    0.000 earley_forest.py:409(transform_token_node)
       18    0.000    0.000    0.000    0.000 Cell.py:11(__init__)
      142    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
       20    0.000    0.000    0.000    0.000 CellError.py:48(__init__)
        7    0.000    0.000    0.000    0.000 DependencyGraph.py:81(ingoing_remove)
       71    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
       71    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        3    0.000    0.000    0.000    0.000 Workbook.py:35(list_sheets)
        2    0.000    0.000    0.000    0.000 contextlib.py:279(helper)
        3    0.000    0.000    0.000    0.000 typing.py:953(__call__)
       27    0.000    0.000    0.000    0.000 Workbook.py:160(<dictcomp>)
        2    0.000    0.000    0.000    0.000 contextlib.py:139(__exit__)
        2    0.000    0.000    0.000    0.000 contextlib.py:102(__init__)
        3    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        4    0.000    0.000    0.000    0.000 case.py:54(testPartExecutor)
        7    0.000    0.000    0.000    0.000 {built-in method math.isnan}
        1    0.000    0.000    0.000    0.000 case.py:551(_callTearDown)
        1    0.000    0.000    0.000    0.000 test_cycles.py:21(tearDown)
        1    0.000    0.000    0.000    0.000 interpreter.py:141(number)
       27    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
       15    0.000    0.000    0.000    0.000 case.py:833(_baseAssertEqual)
        3    0.000    0.000    0.000    0.000 DependencyGraph.py:9(add_sheet)
        7    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
       18    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
        2    0.000    0.000    0.000    0.000 contextlib.py:130(__enter__)
        3    0.000    0.000    0.000    0.000 Sheet.py:7(__init__)
        7    0.000    0.000    0.000    0.000 Cell.py:30(strip_trailing_zeros)
        3    0.000    0.000    0.000    0.000 DependencyGraph.py:5(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        3    0.000    0.000    0.000    0.000 Workbook.py:65(<listcomp>)
        2    0.000    0.000    0.000    0.000 visitors.py:349(__default__)


