         2490174 function calls (2415990 primitive calls) in 0.507 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.508    0.508 case.py:548(_callTestMethod)
        1    0.000    0.000    0.508    0.508 test_cycles.py:63(test_cell_in_multiple_cycles)
       15    0.000    0.000    0.507    0.034 Workbook.py:239(set_cell_contents)
       35    0.000    0.000    0.476    0.014 lark.py:561(open)
       35    0.001    0.000    0.475    0.014 lark.py:267(__init__)
        1    0.000    0.000    0.373    0.373 testStructures.py:43(create_small_cycles)
       35    0.000    0.000    0.325    0.009 load_grammar.py:1413(load_grammar)
    70/35    0.001    0.000    0.313    0.009 load_grammar.py:1239(load_grammar)
       15    0.001    0.000    0.280    0.019 Workbook.py:154(handle_update_tree)
       20    0.000    0.000    0.278    0.014 Workbook.py:197(evaluate_cell)
       70    0.000    0.000    0.210    0.003 load_grammar.py:964(_parse_grammar)
       35    0.001    0.000    0.199    0.006 load_grammar.py:1306(do_import)
      105    0.000    0.000    0.164    0.002 parser_frontends.py:100(parse)
       70    0.000    0.000    0.135    0.002 lalr_parser.py:40(parse)
       70    0.000    0.000    0.135    0.002 lalr_parser.py:83(parse)
       70    0.003    0.000    0.134    0.002 lalr_parser.py:91(parse_from_state)
     1960    0.010    0.000    0.113    0.000 visitors.py:282(transform)
       35    0.003    0.000    0.093    0.003 load_grammar.py:690(compile)
70000/66745    0.013    0.000    0.083    0.000 visitors.py:143(_transform_children)
    11865    0.050    0.000    0.073    0.000 lalr_parser_state.py:67(feed_token)
     8840    0.036    0.000    0.069    0.000 tree.py:133(iter_subtrees)
    35700    0.015    0.000    0.068    0.000 visitors.py:111(_call_userfunc)
       36    0.000    0.000    0.064    0.002 parser_frontends.py:48(__init__)
    27510    0.004    0.000    0.063    0.000 visitors.py:279(_transform_tree)
    11865    0.002    0.000    0.058    0.000 lexer.py:512(lex)
    11865    0.014    0.000    0.056    0.000 lexer.py:590(next_token)
       35    0.000    0.000    0.055    0.002 lark.py:481(_build_parser)
      630    0.001    0.000    0.054    0.000 visitors.py:262(transform)
     1540    0.001    0.000    0.052    0.000 load_grammar.py:1219(_unpack_definition)
       35    0.000    0.000    0.052    0.001 parser_frontends.py:246(_construct_parsing_frontend)
       35    0.000    0.000    0.052    0.001 parser_frontends.py:201(create_earley_parser)
       35    0.000    0.000    0.051    0.001 parser_frontends.py:188(create_earley_parser__dynamic)
     1540    0.002    0.000    0.050    0.000 load_grammar.py:1043(_mangle_definition_tree)
       70    0.005    0.000    0.044    0.001 load_grammar.py:868(resolve_term_references)
22435/945    0.017    0.000    0.041    0.000 copy.py:128(deepcopy)
 6475/945    0.003    0.000    0.040    0.000 tree.py:201(__deepcopy__)
 6475/945    0.003    0.000    0.038    0.000 copy.py:201(_deepcopy_list)
       35    0.000    0.000    0.031    0.001 xearley.py:31(__init__)
       35    0.001    0.000    0.031    0.001 earley.py:32(__init__)
     3780    0.001    0.000    0.030    0.000 tree.py:168(find_data)
    99595    0.022    0.000    0.030    0.000 tree.py:142(<listcomp>)
     3780    0.001    0.000    0.029    0.000 tree.py:164(find_pred)
       35    0.000    0.000    0.029    0.001 lark.py:637(parse)
       35    0.000    0.000    0.029    0.001 earley.py:263(parse)
    17570    0.005    0.000    0.026    0.000 lexer.py:587(match)
       36    0.001    0.000    0.025    0.001 grammar_analysis.py:141(__init__)
       35    0.000    0.000    0.023    0.001 load_grammar.py:710(<listcomp>)
84844/64509    0.013    0.000    0.021    0.000 {built-in method builtins.getattr}
       36    0.010    0.000    0.021    0.001 grammar_analysis.py:78(calculate_sets)
       35    0.000    0.000    0.020    0.001 xearley.py:39(_parse)
       35    0.000    0.000    0.020    0.001 parser_frontends.py:168(__init__)
      520    0.001    0.000    0.019    0.000 utils.py:132(get_regexp_width)
      945    0.008    0.000    0.018    0.000 visitors.py:297(transform)
      140    0.004    0.000    0.018    0.000 earley.py:78(predict_and_complete)
    17570    0.006    0.000    0.018    0.000 lexer.py:387(match)
      564    0.001    0.000    0.018    0.000 sre_parse.py:944(parse)
 1089/564    0.002    0.000    0.016    0.000 sre_parse.py:436(_parse_sub)
 1430/633    0.006    0.000    0.015    0.000 sre_parse.py:494(_parse)
   391462    0.015    0.000    0.015    0.000 {built-in method builtins.isinstance}
       70    0.000    0.000    0.014    0.000 load_grammar.py:921(_get_parser)
    28455    0.009    0.000    0.013    0.000 visitors.py:175(__default__)
     2905    0.001    0.000    0.012    0.000 visitors.py:503(_vargs_inline)
       35    0.000    0.000    0.012    0.000 load_grammar.py:1374(build)
    30197    0.007    0.000    0.012    0.000 grammar.py:18(__eq__)
      630    0.000    0.000    0.012    0.000 load_grammar.py:674(nr_deepcopy_tree)
       35    0.001    0.000    0.012    0.000 load_grammar.py:1342(validate)
     2905    0.001    0.000    0.012    0.000 visitors.py:481(__call__)
    18085    0.011    0.000    0.011    0.000 {method 'match' of 're.Pattern' objects}
      875    0.002    0.000    0.011    0.000 copy.py:259(_reconstruct)
        1    0.000    0.000    0.011    0.011 parser_frontends.py:157(create_lalr_parser)
        1    0.000    0.000    0.010    0.010 lalr_parser.py:18(__init__)
2069/1932    0.001    0.000    0.010    0.000 utils.py:260(bfs)
     2905    0.002    0.000    0.010    0.000 visitors.py:484(__get__)
    13580    0.003    0.000    0.009    0.000 lexer.py:202(__new__)
  685/335    0.001    0.000    0.009    0.000 visitors.py:366(visit)
   269625    0.009    0.000    0.009    0.000 {built-in method builtins.id}
    44467    0.005    0.000    0.009    0.000 grammar.py:124(__eq__)
      417    0.001    0.000    0.009    0.000 grammar_analysis.py:180(expand_rule)
    72763    0.006    0.000    0.008    0.000 grammar.py:25(__hash__)
      735    0.000    0.000    0.008    0.000 load_grammar.py:601(literal)
    14490    0.006    0.000    0.008    0.000 parse_tree_builder.py:145(__call__)
       35    0.000    0.000    0.008    0.000 earley.py:307(<listcomp>)
     2905    0.001    0.000    0.008    0.000 visitors.py:474(__init__)
       35    0.000    0.000    0.008    0.000 earley_forest.py:388(transform)
       35    0.000    0.000    0.008    0.000 earley_forest.py:526(visit)
       35    0.003    0.000    0.008    0.000 earley_forest.py:274(visit)
    65660    0.008    0.000    0.008    0.000 tree.py:57(__init__)
      735    0.001    0.000    0.008    0.000 load_grammar.py:566(_literal_to_pattern)
2295/1630    0.001    0.000    0.008    0.000 visitors.py:346(_call_userfunc)
        1    0.000    0.000    0.008    0.008 lalr_analysis.py:327(compute_lalr)
    31360    0.005    0.000    0.007    0.000 tree.py:62(meta)
      630    0.000    0.000    0.007    0.000 load_grammar.py:915(_find_used_symbols)
    17570    0.005    0.000    0.007    0.000 lexer.py:292(feed)
     2905    0.004    0.000    0.007    0.000 functools.py:35(update_wrapper)
      875    0.001    0.000    0.007    0.000 copy.py:210(_deepcopy_tuple)
       35    0.000    0.000    0.006    0.000 load_grammar.py:694(<listcomp>)
    13580    0.005    0.000    0.006    0.000 lexer.py:213(_future_new)
   176916    0.006    0.000    0.006    0.000 {method 'append' of 'list' objects}
      875    0.000    0.000    0.006    0.000 copy.py:211(<listcomp>)
86379/81536    0.005    0.000    0.006    0.000 {built-in method builtins.hash}
     2829    0.002    0.000    0.006    0.000 grammar_analysis.py:187(_expand_rule)
140339/138611    0.006    0.000    0.006    0.000 {built-in method builtins.len}
       35    0.000    0.000    0.006    0.000 load_grammar.py:693(<listcomp>)
     7702    0.002    0.000    0.005    0.000 utils.py:330(add)
    18060    0.004    0.000    0.005    0.000 copy.py:243(_keep_alive)
    21270    0.004    0.000    0.005    0.000 lexer.py:265(__eq__)
 1505/840    0.001    0.000    0.005    0.000 load_grammar.py:389(expansion)
     7840    0.002    0.000    0.005    0.000 visitors.py:130(_call_userfunc_token)
      735    0.001    0.000    0.004    0.000 load_grammar.py:540(eval_escaping)
     1136    0.001    0.000    0.004    0.000 re.py:288(_compile)
     5215    0.002    0.000    0.004    0.000 earley_common.py:9(__init__)
     3990    0.001    0.000    0.004    0.000 earley_common.py:28(__eq__)
      521    0.000    0.000    0.004    0.000 re.py:249(compile)
     1750    0.001    0.000    0.004    0.000 copy.py:227(_deepcopy_dict)
      630    0.001    0.000    0.003    0.000 load_grammar.py:917(<setcomp>)
       35    0.000    0.000    0.003    0.000 lark.py:467(_prepare_callbacks)
       44    0.000    0.000    0.003    0.000 sre_compile.py:783(compile)
    60008    0.003    0.000    0.003    0.000 grammar.py:121(__hash__)
        1    0.000    0.000    0.003    0.003 lalr_analysis.py:157(__init__)
    17570    0.002    0.000    0.003    0.000 lexer.py:581(scanner)
      735    0.001    0.000    0.003    0.000 ast.py:54(literal_eval)
      175    0.000    0.000    0.003    0.000 load_grammar.py:405(<listcomp>)
        1    0.000    0.000    0.003    0.003 lalr_analysis.py:166(compute_lr0_states)
      315    0.000    0.000    0.003    0.000 visitors.py:159(transform)
     2310    0.001    0.000    0.003    0.000 load_grammar.py:384(_flatten)
      322    0.000    0.000    0.003    0.000 lalr_analysis.py:171(step)
8190/2310    0.002    0.000    0.002    0.000 tree.py:185(scan_values)
 1155/315    0.001    0.000    0.002    0.000 visitors.py:155(_transform_tree)
       36    0.000    0.000    0.002    0.000 parse_tree_builder.py:332(__init__)
    47555    0.002    0.000    0.002    0.000 {method 'get' of 'dict' objects}
      812    0.001    0.000    0.002    0.000 parse_tree_builder.py:340(_init_builders)
      630    0.000    0.000    0.002    0.000 load_grammar.py:420(expansions)
        1    0.000    0.000    0.002    0.002 parser_frontends.py:146(create_basic_lexer)
        1    0.000    0.000    0.002    0.002 lexer.py:526(__init__)
    11375    0.002    0.000    0.002    0.000 parse_tree_builder.py:20(__call__)
      350    0.001    0.000    0.002    0.000 earley.py:135(<listcomp>)
    15855    0.002    0.000    0.002    0.000 tree.py:28(__init__)
      193    0.001    0.000    0.002    0.000 utils.py:23(classify)
     6083    0.001    0.000    0.002    0.000 sre_parse.py:255(get)
     2940    0.002    0.000    0.002    0.000 tree.py:174(expand_kids_by_data)
     2100    0.000    0.000    0.002    0.000 utils.py:327(__contains__)
      595    0.000    0.000    0.002    0.000 earley_forest.py:428(_visit_node_out_helper)
 1877/717    0.002    0.000    0.002    0.000 sre_parse.py:175(getwidth)
    37205    0.002    0.000    0.002    0.000 tree.py:170(<lambda>)
      105    0.001    0.000    0.002    0.000 xearley.py:41(scan)
     1470    0.001    0.000    0.002    0.000 load_grammar.py:896(<listcomp>)
     1610    0.001    0.000    0.002    0.000 lexer.py:262(__deepcopy__)
     1540    0.001    0.000    0.002    0.000 load_grammar.py:1127(_define)
    10021    0.002    0.000    0.002    0.000 grammar_analysis.py:70(update_set)
     8711    0.002    0.000    0.002    0.000 sre_parse.py:234(__next)
      735    0.000    0.000    0.002    0.000 ast.py:33(parse)
      776    0.001    0.000    0.002    0.000 parse_tree_builder.py:162(maybe_create_child_filter)
        1    0.000    0.000    0.002    0.002 lalr_analysis.py:258(compute_lookaheads)
       35    0.000    0.000    0.002    0.000 load_grammar.py:840(__call__)
        1    0.001    0.001    0.002    0.002 lalr_analysis.py:229(compute_includes_lookback)
    17675    0.001    0.000    0.001    0.000 {method 'group' of 're.Match' objects}
     1225    0.001    0.000    0.001    0.000 load_grammar.py:908(terminal)
    14491    0.001    0.000    0.001    0.000 {built-in method __new__ of type object at 0x1010e6ff8}
      315    0.000    0.000    0.001    0.000 earley_forest.py:630(visit_packed_node_out)
       35    0.000    0.000    0.001    0.000 pkgutil.py:599(get_data)
      735    0.001    0.000    0.001    0.000 load_grammar.py:536(_rfind)
      420    0.000    0.000    0.001    0.000 load_grammar.py:631(expansions)
      280    0.000    0.000    0.001    0.000 earley_forest.py:617(visit_symbol_node_in)
     4263    0.001    0.000    0.001    0.000 grammar_analysis.py:45(__hash__)
        1    0.000    0.000    0.001    0.001 lexer.py:568(_build_scanner)
      735    0.001    0.000    0.001    0.000 {built-in method builtins.compile}
        1    0.000    0.000    0.001    0.001 lexer.py:357(__init__)
        1    0.000    0.000    0.001    0.001 lexer.py:368(_build_mres)
       44    0.000    0.000    0.001    0.000 sre_compile.py:622(_code)
     6396    0.001    0.000    0.001    0.000 sre_parse.py:165(__getitem__)
      315    0.000    0.000    0.001    0.000 earley_forest.py:441(visit_packed_node_out)
     3696    0.001    0.000    0.001    0.000 grammar_analysis.py:17(__init__)
       35    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:1070(get_data)
      190    0.000    0.000    0.001    0.000 utils.py:254(classify_bool)
      560    0.000    0.000    0.001    0.000 earley_forest.py:84(children)
1610/1470    0.000    0.000    0.001    0.000 tree.py:130(__hash__)
     2549    0.000    0.000    0.001    0.000 {built-in method fromkeys}
      848    0.000    0.000    0.001    0.000 grammar.py:103(__init__)
    15400    0.001    0.000    0.001    0.000 {built-in method builtins.setattr}
     4257    0.001    0.000    0.001    0.000 sre_parse.py:250(match)
      190    0.000    0.000    0.001    0.000 utils.py:256(<listcomp>)
       36    0.001    0.000    0.001    0.000 parse_tree_builder.py:358(create_callback)
      175    0.000    0.000    0.001    0.000 load_grammar.py:450(pattern)
       35    0.001    0.000    0.001    0.000 {built-in method io.open}
     1750    0.000    0.000    0.001    0.000 copy.py:264(<genexpr>)
        1    0.000    0.000    0.001    0.001 lalr_analysis.py:267(compute_lalr1_states)
       35    0.000    0.000    0.001    0.000 load_grammar.py:793(<setcomp>)
     1122    0.000    0.000    0.001    0.000 {built-in method builtins.max}
   225/44    0.000    0.000    0.001    0.000 sre_compile.py:87(_compile)
      280    0.000    0.000    0.001    0.000 earley_forest.py:413(visit_symbol_node_in)
      245    0.000    0.000    0.001    0.000 earley_forest.py:435(visit_symbol_node_out)
        2    0.000    0.000    0.001    0.000 lalr_analysis.py:106(digraph)
        1    0.000    0.000    0.001    0.001 lalr_analysis.py:194(compute_reads_relations)
      560    0.000    0.000    0.001    0.000 earley_common.py:25(advance)
     1983    0.000    0.000    0.001    0.000 grammar.py:22(__ne__)
      875    0.000    0.000    0.001    0.000 grammar.py:50(renamed)
      315    0.000    0.000    0.001    0.000 earley_forest.py:594(transform_packed_node)
       30    0.000    0.000    0.001    0.000 lexer.py:107(min_width)
       35    0.001    0.000    0.001    0.000 load_grammar.py:1292(_remove_unused)
       60    0.000    0.000    0.001    0.000 lexer.py:102(_get_width)
      697    0.001    0.000    0.001    0.000 sre_parse.py:356(_escape)
       35    0.001    0.000    0.001    0.000 {built-in method io.open_code}
     1812    0.000    0.000    0.001    0.000 utils.py:324(__init__)
      560    0.000    0.000    0.001    0.000 earley_forest.py:63(add_family)
  216/160    0.000    0.000    0.001    0.000 lalr_analysis.py:123(traverse)
      560    0.000    0.000    0.001    0.000 {built-in method builtins.sorted}
     4835    0.000    0.000    0.001    0.000 {method 'add' of 'set' objects}
      520    0.000    0.000    0.001    0.000 re.py:197(search)
     1855    0.001    0.000    0.001    0.000 load_grammar.py:1030(mangle)
      525    0.000    0.000    0.001    0.000 lexer.py:81(to_regexp)
     5250    0.001    0.000    0.001    0.000 {method 'count' of 'str' objects}
      142    0.000    0.000    0.001    0.000 {method 'join' of 'str' objects}
      490    0.000    0.000    0.001    0.000 earley_forest.py:50(__init__)
       36    0.000    0.000    0.001    0.000 grammar_analysis.py:160(<dictcomp>)
        1    0.000    0.000    0.001    0.001 load_grammar.py:929(<listcomp>)
       36    0.000    0.000    0.001    0.000 grammar_analysis.py:175(<dictcomp>)
     3418    0.000    0.000    0.001    0.000 sre_parse.py:173(append)
    10316    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
     1820    0.000    0.000    0.001    0.000 load_grammar.py:759(<genexpr>)
      700    0.000    0.000    0.001    0.000 load_grammar.py:798(<lambda>)
      210    0.000    0.000    0.001    0.000 utils.py:187(dedup_list)
     2205    0.000    0.000    0.001    0.000 load_grammar.py:537(<genexpr>)
      245    0.000    0.000    0.001    0.000 earley_forest.py:572(transform_symbol_node)
      455    0.000    0.000    0.001    0.000 load_grammar.py:639(<genexpr>)
      315    0.000    0.000    0.001    0.000 earley_forest.py:623(visit_packed_node_in)
      520    0.000    0.000    0.001    0.000 lexer.py:125(__init__)
     2501    0.000    0.000    0.000    0.000 sre_parse.py:287(tell)
     3041    0.000    0.000    0.000    0.000 sre_parse.py:161(__len__)
      564    0.000    0.000    0.000    0.000 sre_parse.py:225(__init__)
      202    0.000    0.000    0.000    0.000 lalr_analysis.py:176(<setcomp>)
     9030    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      196    0.000    0.000    0.000    0.000 Sheet.py:38(split_cell_ref)
       81    0.000    0.000    0.000    0.000 Sheet.py:13(get_cell)
       45    0.000    0.000    0.000    0.000 Workbook.py:390(get_cell_value)
       36    0.000    0.000    0.000    0.000 grammar_analysis.py:82(<setcomp>)
      106    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
      153    0.000    0.000    0.000    0.000 sre_parse.py:97(closegroup)
     5254    0.000    0.000    0.000    0.000 {built-in method builtins.next}
     2413    0.000    0.000    0.000    0.000 grammar.py:42(__init__)
     7840    0.000    0.000    0.000    0.000 visitors.py:182(__default_token__)
     8915    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
     1986    0.000    0.000    0.000    0.000 utils.py:333(__iter__)
      315    0.000    0.000    0.000    0.000 load_grammar.py:1054(_make_rule_tuple)
       44    0.000    0.000    0.000    0.000 sre_compile.py:560(_compile_info)
     4117    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
      905    0.000    0.000    0.000    0.000 lexer.py:41(__init__)
     1540    0.000    0.000    0.000    0.000 load_grammar.py:1111(_check_options)
     3849    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      315    0.000    0.000    0.000    0.000 earley_forest.py:418(visit_packed_node_in)
     3185    0.000    0.000    0.000    0.000 {method 'rindex' of 'str' objects}
     4474    0.000    0.000    0.000    0.000 grammar_analysis.py:28(next)
     1015    0.000    0.000    0.000    0.000 lexer.py:50(__hash__)
      875    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
     2345    0.000    0.000    0.000    0.000 load_grammar.py:918(<lambda>)
     3850    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
     2024    0.000    0.000    0.000    0.000 sre_parse.py:112(__init__)
      525    0.000    0.000    0.000    0.000 re.py:269(escape)
      350    0.000    0.000    0.000    0.000 load_grammar.py:637(<lambda>)
       95    0.000    0.000    0.000    0.000 Workbook.py:137(is_valid_location)
      155    0.000    0.000    0.000    0.000 grammar_analysis.py:60(__init__)
     1540    0.000    0.000    0.000    0.000 load_grammar.py:1079(__init__)
     6195    0.000    0.000    0.000    0.000 earley_common.py:31(__hash__)
     1308    0.000    0.000    0.000    0.000 {built-in method builtins.any}
      101    0.000    0.000    0.000    0.000 Sheet.py:45(out_of_bounds)
      262    0.000    0.000    0.000    0.000 grammar_analysis.py:32(advance)
       95    0.000    0.000    0.000    0.000 re.py:187(match)
       35    0.000    0.000    0.000    0.000 {method 'read' of '_io.TextIOWrapper' objects}
      560    0.000    0.000    0.000    0.000 earley_forest.py:122(__init__)
      560    0.000    0.000    0.000    0.000 abc.py:117(__instancecheck__)
       35    0.000    0.000    0.000    0.000 lark.py:188(__init__)
      245    0.000    0.000    0.000    0.000 earley_forest.py:556(_call_rule_func)
      216    0.000    0.000    0.000    0.000 sre_parse.py:868(_parse_flags)
      945    0.000    0.000    0.000    0.000 load_grammar.py:668(value)
      525    0.000    0.000    0.000    0.000 sre_parse.py:433(_uniq)
       35    0.000    0.000    0.000    0.000 load_grammar.py:443(__init__)
      105    0.000    0.000    0.000    0.000 parser_frontends.py:96(_make_lexer_thread)
       35    0.000    0.000    0.000    0.000 load_grammar.py:797(<setcomp>)
      737    0.000    0.000    0.000    0.000 {built-in method builtins.all}
       35    0.000    0.000    0.000    0.000 earley.py:53(<setcomp>)
     4375    0.000    0.000    0.000    0.000 copy.py:182(_deepcopy_atomic)
      595    0.000    0.000    0.000    0.000 load_grammar.py:911(nonterminal)
      564    0.000    0.000    0.000    0.000 sre_parse.py:928(fix_flags)
     1379    0.000    0.000    0.000    0.000 grammar_analysis.py:36(is_satisfied)
      875    0.000    0.000    0.000    0.000 copyreg.py:100(__newobj__)
       70    0.000    0.000    0.000    0.000 {method '__exit__' of '_io._IOBase' objects}
       30    0.000    0.000    0.000    0.000 _collections_abc.py:649(__or__)
     1785    0.000    0.000    0.000    0.000 lark.py:217(__getattr__)
      245    0.000    0.000    0.000    0.000 earley_forest.py:547(_collapse_ambig)
      196    0.000    0.000    0.000    0.000 Sheet.py:31(str_to_index)
      470    0.000    0.000    0.000    0.000 lexer.py:98(to_regexp)
      420    0.000    0.000    0.000    0.000 parser_frontends.py:184(match)
       70    0.000    0.000    0.000    0.000 earley.py:285(<genexpr>)
     3841    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
     1043    0.000    0.000    0.000    0.000 parse_tree_builder.py:158(_should_expand)
      105    0.000    0.000    0.000    0.000 posixpath.py:71(join)
       20    0.000    0.000    0.000    0.000 Workbook.py:142(get_cell)
      630    0.000    0.000    0.000    0.000 earley_forest.py:136(sort_key)
      995    0.000    0.000    0.000    0.000 lexer.py:70(_get_flags)
     1505    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
       35    0.000    0.000    0.000    0.000 earley.py:52(<setcomp>)
       30    0.000    0.000    0.000    0.000 _collections_abc.py:626(_from_iterable)
     3648    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      315    0.000    0.000    0.000    0.000 earley.py:58(<listcomp>)
       50    0.000    0.000    0.000    0.000 sre_compile.py:292(_optimize_charset)
     3281    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
     3926    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      542    0.000    0.000    0.000    0.000 sre_parse.py:169(__setitem__)
       35    0.000    0.000    0.000    0.000 load_grammar.py:446(<dictcomp>)
      735    0.000    0.000    0.000    0.000 ast.py:84(_convert)
       35    0.000    0.000    0.000    0.000 load_grammar.py:1419(sha256_digest)
     1661    0.000    0.000    0.000    0.000 grammar.py:15(__init__)
       35    0.000    0.000    0.000    0.000 load_grammar.py:806(<setcomp>)
      665    0.000    0.000    0.000    0.000 load_grammar.py:621(expansion)
       36    0.000    0.000    0.000    0.000 grammar_analysis.py:145(<dictcomp>)
      490    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
     1995    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
      153    0.000    0.000    0.000    0.000 sre_parse.py:85(opengroup)
      525    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
       70    0.000    0.000    0.000    0.000 load_grammar.py:1285(<dictcomp>)
       35    0.000    0.000    0.000    0.000 {method 'read' of '_io.BufferedReader' objects}
    25/15    0.000    0.000    0.000    0.000 Workbook.py:188(calculate_out_degree)
       70    0.000    0.000    0.000    0.000 lexer.py:439(from_text)
      175    0.000    0.000    0.000    0.000 load_grammar.py:346(expr)
      560    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      315    0.000    0.000    0.000    0.000 earley_forest.py:146(children)
        1    0.000    0.000    0.000    0.000 lalr_analysis.py:81(from_ParseTable)
      564    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
      520    0.000    0.000    0.000    0.000 utils.py:144(<listcomp>)
       35    0.000    0.000    0.000    0.000 load_grammar.py:642(expr)
      418    0.000    0.000    0.000    0.000 typing.py:306(inner)
     2590    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
      280    0.000    0.000    0.000    0.000 earley_forest.py:69(load_paths)
      134    0.000    0.000    0.000    0.000 grammar_analysis.py:40(__eq__)
       21    0.000    0.000    0.000    0.000 Workbook.py:378(detect_cycle)
     1575    0.000    0.000    0.000    0.000 typing.py:1737(cast)
      560    0.000    0.000    0.000    0.000 utils.py:342(__len__)
       35    0.000    0.000    0.000    0.000 parser_frontends.py:127(_get_lexer_callbacks)
      349    0.000    0.000    0.000    0.000 lalr_analysis.py:172(<lambda>)
       15    0.000    0.000    0.000    0.000 Sheet.py:73(resize)
        5    0.000    0.000    0.000    0.000 Workbook.py:420(get_cell_ref_info)
     1616    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
     1390    0.000    0.000    0.000    0.000 parse_tree_builder.py:182(<genexpr>)
       70    0.000    0.000    0.000    0.000 lexer.py:252(new_borrow_pos)
      425    0.000    0.000    0.000    0.000 grammar.py:69(__init__)
      945    0.000    0.000    0.000    0.000 load_grammar.py:572(<genexpr>)
       36    0.000    0.000    0.000    0.000 common.py:42(__init__)
      875    0.000    0.000    0.000    0.000 visitors.py:108(__init__)
       35    0.000    0.000    0.000    0.000 earley_forest.py:438(visit_intermediate_node_out)
      520    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}
    48/21    0.000    0.000    0.000    0.000 Workbook.py:360(dfs)
      280    0.000    0.000    0.000    0.000 earley_forest.py:490(__init__)
       36    0.000    0.000    0.000    0.000 grammar_analysis.py:166(<dictcomp>)
      142    0.000    0.000    0.000    0.000 load_grammar.py:902(symbol_from_strcase)
      945    0.000    0.000    0.000    0.000 load_grammar.py:1232(<genexpr>)
      120    0.000    0.000    0.000    0.000 lalr_analysis.py:88(<dictcomp>)
     1191    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       35    0.000    0.000    0.000    0.000 earley_forest.py:514(__init__)
      120    0.000    0.000    0.000    0.000 lalr_analysis.py:271(<dictcomp>)
       70    0.000    0.000    0.000    0.000 lexer.py:416(__init__)
       44    0.000    0.000    0.000    0.000 enum.py:986(__and__)
      105    0.000    0.000    0.000    0.000 lark.py:223(__setattr__)
       35    0.000    0.000    0.000    0.000 posixpath.py:150(dirname)
      902    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
      394    0.000    0.000    0.000    0.000 sre_parse.py:82(groups)
       35    0.000    0.000    0.000    0.000 parser_frontends.py:116(_validate_frontend_args)
      350    0.000    0.000    0.000    0.000 lexer.py:88(max_width)
      812    0.000    0.000    0.000    0.000 grammar_analysis.py:149(<lambda>)
       35    0.000    0.000    0.000    0.000 {built-in method _hashlib.openssl_sha256}
       36    0.000    0.000    0.000    0.000 grammar_analysis.py:163(<dictcomp>)
       30    0.000    0.000    0.000    0.000 sre_parse.py:268(getuntil)
       35    0.000    0.000    0.000    0.000 load_grammar.py:1180(_unpack_import)
      630    0.000    0.000    0.000    0.000 earley_forest.py:132(is_empty)
      120    0.000    0.000    0.000    0.000 lalr_analysis.py:297(<dictcomp>)
       35    0.000    0.000    0.000    0.000 load_grammar.py:1159(_ignore)
      490    0.000    0.000    0.000    0.000 load_grammar.py:809(<lambda>)
      350    0.000    0.000    0.000    0.000 lexer.py:84(min_width)
      700    0.000    0.000    0.000    0.000 load_grammar.py:431(expansion)
      245    0.000    0.000    0.000    0.000 earley_forest.py:562(_call_ambig_func)
      105    0.000    0.000    0.000    0.000 load_grammar.py:613(_make_joined_pattern)
       70    0.000    0.000    0.000    0.000 lalr_parser_state.py:22(__init__)
      560    0.000    0.000    0.000    0.000 load_grammar.py:617(pattern)
      262    0.000    0.000    0.000    0.000 lalr_analysis.py:174(<lambda>)
       63    0.000    0.000    0.000    0.000 DependencyGraph.py:16(outgoing_get)
       70    0.000    0.000    0.000    0.000 earley_forest.py:423(visit_token_node)
       15    0.000    0.000    0.000    0.000 Sheet.py:51(resize_sheet)
      595    0.000    0.000    0.000    0.000 earley_forest.py:539(_check_cycle)
       70    0.000    0.000    0.000    0.000 visitors.py:267(__mul__)
       35    0.000    0.000    0.000    0.000 codecs.py:319(decode)
      315    0.000    0.000    0.000    0.000 earley_forest.py:149(<listcomp>)
      177    0.000    0.000    0.000    0.000 parse_tree_builder.py:187(<listcomp>)
      105    0.000    0.000    0.000    0.000 earley_forest.py:184(__init__)
      764    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
      812    0.000    0.000    0.000    0.000 grammar_analysis.py:172(<lambda>)
      560    0.000    0.000    0.000    0.000 load_grammar.py:663(value)
      773    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
       35    0.000    0.000    0.000    0.000 lark.py:413(<dictcomp>)
       60    0.000    0.000    0.000    0.000 sre_compile.py:447(_simple)
      105    0.000    0.000    0.000    0.000 load_grammar.py:640(<setcomp>)
      433    0.000    0.000    0.000    0.000 parse_tree_builder.py:17(__init__)
       35    0.000    0.000    0.000    0.000 earley_forest.py:582(transform_intermediate_node)
       70    0.000    0.000    0.000    0.000 visitors.py:167(__mul__)
       35    0.000    0.000    0.000    0.000 load_grammar.py:1303(<dictcomp>)
       88    0.000    0.000    0.000    0.000 enum.py:359(__call__)
      560    0.000    0.000    0.000    0.000 earley_forest.py:160(__hash__)
       50    0.000    0.000    0.000    0.000 sre_compile.py:265(_compile_charset)
      105    0.000    0.000    0.000    0.000 parser_frontends.py:86(_verify_start)
       35    0.000    0.000    0.000    0.000 util.py:73(find_spec)
        1    0.000    0.000    0.000    0.000 load_grammar.py:925(<listcomp>)
        2    0.000    0.000    0.000    0.000 typing.py:1138(__getitem__)
    45/44    0.000    0.000    0.000    0.000 sre_compile.py:485(_get_literal_prefix)
       70    0.000    0.000    0.000    0.000 load_grammar.py:1094(__init__)
       35    0.000    0.000    0.000    0.000 earley_forest.py:381(__init__)
      140    0.000    0.000    0.000    0.000 posixpath.py:41(_get_sep)
      289    0.000    0.000    0.000    0.000 _collections_abc.py:652(<genexpr>)
      245    0.000    0.000    0.000    0.000 exceptions.py:19(assert_config)
       70    0.000    0.000    0.000    0.000 contextlib.py:426(__exit__)
       36    0.000    0.000    0.000    0.000 common.py:45(<dictcomp>)
       35    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
       10    0.000    0.000    0.000    0.000 sre_compile.py:435(_mk_bitmap)
       15    0.000    0.000    0.000    0.000 DependencyGraph.py:58(ingoing_add)
       35    0.000    0.000    0.000    0.000 load_grammar.py:516(__init__)
      140    0.000    0.000    0.000    0.000 load_grammar.py:434(alias)
       35    0.000    0.000    0.000    0.000 {method 'hexdigest' of '_hashlib.HASH' objects}
       40    0.000    0.000    0.000    0.000 DependencyGraph.py:24(ingoing_get)
       70    0.000    0.000    0.000    0.000 lalr_parser_state.py:40(__init__)
       35    0.000    0.000    0.000    0.000 load_grammar.py:445(<setcomp>)
      140    0.000    0.000    0.000    0.000 load_grammar.py:411(alias)
        1    0.000    0.000    0.000    0.000 load_grammar.py:927(<listcomp>)
       35    0.000    0.000    0.000    0.000 load_grammar.py:743(<setcomp>)
       36    0.000    0.000    0.000    0.000 common.py:80(__init__)
       70    0.000    0.000    0.000    0.000 lexer.py:279(__init__)
      315    0.000    0.000    0.000    0.000 load_grammar.py:1072(<listcomp>)
       35    0.000    0.000    0.000    0.000 xearley.py:36(<listcomp>)
        2    0.000    0.000    0.000    0.000 typing.py:1147(copy_with)
      315    0.000    0.000    0.000    0.000 load_grammar.py:428(expansions)
      177    0.000    0.000    0.000    0.000 parse_tree_builder.py:141(__init__)
       20    0.000    0.000    0.000    0.000 visitor.py:10(cell)
      392    0.000    0.000    0.000    0.000 {method 'isalpha' of 'str' objects}
        2    0.000    0.000    0.000    0.000 typing.py:1016(__init__)
       35    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
      111    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       36    0.000    0.000    0.000    0.000 parse_tree_builder.py:83(make_propagate_positions)
       88    0.000    0.000    0.000    0.000 sre_compile.py:619(isstring)
       18    0.000    0.000    0.000    0.000 sre_compile.py:516(_get_charset_prefix)
      120    0.000    0.000    0.000    0.000 {method 'update' of 'set' objects}
      105    0.000    0.000    0.000    0.000 utils.py:339(__bool__)
      140    0.000    0.000    0.000    0.000 visitors.py:259(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.print}
       35    0.000    0.000    0.000    0.000 load_grammar.py:228(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:71(search_function)
      184    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        1    0.000    0.000    0.000    0.000 lexer.py:334(_create_unless)
       70    0.000    0.000    0.000    0.000 lexer.py:443(lex)
       88    0.000    0.000    0.000    0.000 enum.py:678(__new__)
        7    0.000    0.000    0.000    0.000 lexer.py:556(<genexpr>)
       35    0.000    0.000    0.000    0.000 earley_forest.py:155(__eq__)
        5    0.000    0.000    0.000    0.000 visitors.py:419(visit)
       30    0.000    0.000    0.000    0.000 lexer.py:559(<lambda>)
       10    0.000    0.000    0.000    0.000 sre_compile.py:437(<listcomp>)
       35    0.000    0.000    0.000    0.000 <string>:1(<lambda>)
       26    0.000    0.000    0.000    0.000 sre_compile.py:456(_generate_overlap_table)
       31    0.000    0.000    0.000    0.000 lexer.py:375(<genexpr>)
        5    0.000    0.000    0.000    0.000 visitors.py:425(_visit_tree)
      8/6    0.000    0.000    0.000    0.000 abc.py:121(__subclasscheck__)
       44    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
       70    0.000    0.000    0.000    0.000 lexer.py:435(__init__)
       16    0.000    0.000    0.000    0.000 typing.py:986(__setattr__)
      8/6    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
       15    0.000    0.000    0.000    0.000 Sheet.py:19(to_sheet_coords)
      113    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
       15    0.000    0.000    0.000    0.000 DependencyGraph.py:35(outgoing_set)
       35    0.000    0.000    0.000    0.000 {method 'issuperset' of 'set' objects}
       35    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
       70    0.000    0.000    0.000    0.000 contextlib.py:420(__init__)
        2    0.000    0.000    0.000    0.000 contextlib.py:139(__exit__)
       35    0.000    0.000    0.000    0.000 load_grammar.py:685(__init__)
      105    0.000    0.000    0.000    0.000 earley_forest.py:198(__hash__)
      140    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
       35    0.000    0.000    0.000    0.000 load_grammar.py:1293(rule_dependencies)
       35    0.000    0.000    0.000    0.000 load_grammar.py:1029(_get_mangle)
        1    0.000    0.000    0.000    0.000 lalr_analysis.py:308(<dictcomp>)
        2    0.000    0.000    0.000    0.000 typing.py:947(__init__)
       35    0.000    0.000    0.000    0.000 earley_forest.py:223(__init__)
       35    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
       51    0.000    0.000    0.000    0.000 sre_compile.py:81(_combine_flags)
       15    0.000    0.000    0.000    0.000 Cell.py:11(__init__)
       35    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        1    0.000    0.000    0.000    0.000 Workbook.py:52(new_sheet)
        4    0.000    0.000    0.000    0.000 typing.py:1143(<genexpr>)
       63    0.000    0.000    0.000    0.000 sre_compile.py:477(_get_iscased)
      105    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      142    0.000    0.000    0.000    0.000 {method 'isupper' of 'str' objects}
       15    0.000    0.000    0.000    0.000 CellError.py:48(__init__)
       81    0.000    0.000    0.000    0.000 {method 'keys' of 'collections.OrderedDict' objects}
       70    0.000    0.000    0.000    0.000 contextlib.py:423(__enter__)
      105    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
       35    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       35    0.000    0.000    0.000    0.000 load_grammar.py:498(__init__)
       16    0.000    0.000    0.000    0.000 typing.py:935(_is_dunder)
       20    0.000    0.000    0.000    0.000 visitor.py:6(__init__)
        1    0.000    0.000    0.000    0.000 lalr_analysis.py:84(<dictcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:43(normalize_encoding)
        4    0.000    0.000    0.000    0.000 DependencyGraph.py:81(ingoing_remove)
       30    0.000    0.000    0.000    0.000 lexer.py:111(max_width)
       71    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
       70    0.000    0.000    0.000    0.000 earley_forest.py:409(transform_token_node)
       30    0.000    0.000    0.000    0.000 lexer.py:394(_regexp_has_newline)
        1    0.000    0.000    0.000    0.000 utf_8.py:33(getregentry)
        5    0.000    0.000    0.000    0.000 interpreter.py:149(cell)
       31    0.000    0.000    0.000    0.000 lexer.py:528(<genexpr>)
       38    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        2    0.000    0.000    0.000    0.000 typing.py:146(_type_check)
       66    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
       35    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 contextlib.py:279(helper)
        1    0.000    0.000    0.000    0.000 copyreg.py:109(_slotnames)
        4    0.000    0.000    0.000    0.000 case.py:54(testPartExecutor)
       12    0.000    0.000    0.000    0.000 sre_parse.py:296(_class_escape)
        2    0.000    0.000    0.000    0.000 contextlib.py:102(__init__)
        1    0.000    0.000    0.000    0.000 case.py:840(assertEqual)
       15    0.000    0.000    0.000    0.000 Workbook.py:160(<dictcomp>)
        1    0.000    0.000    0.000    0.000 codecs.py:94(__new__)
        5    0.000    0.000    0.000    0.000 interpreter.py:9(__init__)
       10    0.000    0.000    0.000    0.000 {method 'translate' of 'bytearray' objects}
        1    0.000    0.000    0.000    0.000 case.py:551(_callTearDown)
       30    0.000    0.000    0.000    0.000 {method 'isidentifier' of 'str' objects}
        1    0.000    0.000    0.000    0.000 Workbook.py:26(__init__)
       41    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_iscased}
        1    0.000    0.000    0.000    0.000 test_cycles.py:21(tearDown)
        2    0.000    0.000    0.000    0.000 _collections_abc.py:262(__subclasshook__)
       30    0.000    0.000    0.000    0.000 lexer.py:335(<lambda>)
        1    0.000    0.000    0.000    0.000 lexer.py:547(<setcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.__import__}
       15    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 typing.py:206(_collect_type_vars)
        2    0.000    0.000    0.000    0.000 contextlib.py:130(__enter__)
        1    0.000    0.000    0.000    0.000 case.py:807(_getAssertEqualityFunc)
        1    0.000    0.000    0.000    0.000 lexer.py:364(<setcomp>)
       27    0.000    0.000    0.000    0.000 {built-in method _sre.unicode_tolower}
        2    0.000    0.000    0.000    0.000 lalr_analysis.py:39(__init__)
        2    0.000    0.000    0.000    0.000 _collections_abc.py:78(_check_methods)
        4    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        1    0.000    0.000    0.000    0.000 Workbook.py:35(list_sheets)
        1    0.000    0.000    0.000    0.000 lexer.py:352(<listcomp>)
       15    0.000    0.000    0.000    0.000 {built-in method builtins.chr}
        1    0.000    0.000    0.000    0.000 typing.py:953(__call__)
        2    0.000    0.000    0.000    0.000 typing.py:137(_type_convert)
        2    0.000    0.000    0.000    0.000 typing.py:223(_check_generic)
        1    0.000    0.000    0.000    0.000 DependencyGraph.py:9(add_sheet)
        4    0.000    0.000    0.000    0.000 typing.py:1022(<genexpr>)
        1    0.000    0.000    0.000    0.000 Sheet.py:7(__init__)
        4    0.000    0.000    0.000    0.000 {method 'isascii' of 'str' objects}
        1    0.000    0.000    0.000    0.000 DependencyGraph.py:5(__init__)
        1    0.000    0.000    0.000    0.000 lalr_parser.py:78(__init__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        4    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'get' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 lalr_analysis.py:319(<dictcomp>)
        1    0.000    0.000    0.000    0.000 case.py:833(_baseAssertEqual)
        1    0.000    0.000    0.000    0.000 Workbook.py:65(<listcomp>)
        1    0.000    0.000    0.000    0.000 lalr_analysis.py:94(<dictcomp>)
        1    0.000    0.000    0.000    0.000 lalr_analysis.py:93(<dictcomp>)
        1    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}


